{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "62836d27-c7d4-4992-9dd1-ff63926003c9",
  "query" : "declare option xhive:index-debug 'true';\ndeclare option xhive:queryplan-debug 'true';\ndeclare option xhive:pathexpr-debug 'true';\n\ndeclare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKUNNR external;\ndeclare variable $sBUKRS external;\ndeclare variable $sVKORG external;\ndeclare variable $sVTWEG external;\ndeclare variable $sSPART external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\n\ndeclare function local:get_tvkbt($TVKBT)\n{\n      if ($TVKBT = \"A\") then \"Create a delivery with qty greater than zero\" \n      else if ($TVKBT = \"B\") then \"Create only one delivery (also with qty = 0)\"\n      else if ($TVKBT = \"C\") then \"Only complete delivery allowed\"\n      else if ($TVKBT = \"D\") then \"No limit to subsequent deliveries\"\n      else \"Partial delivery allowed\"\n};\n\ndeclare function local:get_name($pernr, $parvw, $NAME1)\n{\n\t\tif ($parvw = \"VE\") then sias:get_pa0002_name($pernr)\n     \t\t else $NAME1\n};\n\ndeclare function local:get_pernr($kunnr, $vkorg, $vtweg, $spart, $parvw)\n{\n\t\tif ($parvw = \"VE\") then sias:get_knvp($kunnr, $vkorg, $vtweg, $spart, $parvw)\n     \t\t else $kunnr\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sKUNNR, concat(\"$knvv/KUNNR = &apos;\", $sKUNNR, \"&apos;\" ))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"$knb1/BUKRS = &apos;\", $sBUKRS, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sVKORG, concat(\"$knvv/VKORG = &apos;\", $sVKORG, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sVTWEG, concat(\"$knvv/VTWEG = &apos;\", $sVTWEG, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sSPART, concat(\"$knvv/SPART = &apos;\", $sSPART, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $knvv in /SAP/KNVV/ROW, $knvp in /SAP/KNVP/ROW[KUNNR = $knvv/KUNNR and VKORG = $knvv/VKORG and VTWEG = $knvv/VTWEG and SPART = $knvv/SPART], $kna1 in /SAP/KNA1/ROW[KUNNR = $knvv/KUNNR], $knb1 in /SAP/KNB1/ROW[KUNNR = $knvv/KUNNR]\", $whereClause, \"return <RS><KNVV>{ $knvv }</KNVV><KNVP>{ $knvp }</KNVP><KNA1>{ $kna1 }</KNA1><KNB1>{ $knb1 }</KNB1></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n\tfor $rs in $main-query\n    \nlet $TPART := sias:get_tpart($rs/KNVP/ROW/PARVW/text())\nlet $TPAUM := sias:get_tpaum($rs/KNVP/ROW/PARVW/text())\nlet $T001 := sias:get_t001($rs/KNB1/ROW/BUKRS/text(), \"BUTXT\")\nlet $TVKOT := sias:get_tvkot($rs/KNVV/ROW/VKORG/text())\nlet $TVTWT := sias:get_tvtwt($rs/KNVV/ROW/VTWEG/text())\nlet $TSPAT := sias:get_tspat($rs/KNVV/ROW/SPART/text())\n\n\nlet $PERNR := local:get_pernr($rs/KNA1/ROW/KUNNR/text(), $rs/KNVP/ROW/VKORG/text(), $rs/KNVP/ROW/VTWEG/text(), $rs/KNVP/ROW/SPART/text(), $rs/KNVP/ROW/PARVW/text())\nlet $NAME := local:get_name($PERNR, $rs/KNVP/ROW/PARVW/text(), $rs/KNA1/ROW/NAME1/text())\n\nlet $pernr_final := sias:trimzero($PERNR)\n\nlet $KUNNR_trim := sias:trimzero($rs/KNVV/ROW/KUNNR/text())\n\n    \nreturn\n<row id='{string($rs/KNB1/ROW/@table:id)}'>\n<column name='cKUNNR1'>{ $KUNNR_trim }{ '     ' }{ $rs/KNA1/ROW/NAME1/text() }{ '     ' }{ $rs/KNA1/ROW/ORT01/text() }</column>\n<column name='cBUKRS1'>{ $rs/KNB1/ROW/BUKRS/text() }{ '     ' }{ $T001 }</column>\n<column name='cVKORG1'>{ $rs/KNVV/ROW/VKORG/text() }{ '     ' }{ $TVKOT }</column>\n<column name='cVTWEG1'>{ $rs/KNVV/ROW/VTWEG/text() }{ '     ' }{ $TVTWT }</column>\n<column name='cSPART1'>{ $rs/KNVV/ROW/SPART/text() }{ '     ' }{ $TSPAT }</column>\n\n<column name='cPARVW'>{ $rs/KNVP/ROW/PARVW/text() }</column>\n<column name='cVTEXT'>{ $TPART }</column>\n<column name='cNumber'>{ $pernr_final }</column>\n<column name='cNAME1'>{ $NAME }</column>\n<column name='cKNREF'>{ $rs/KNVP/ROW/KNREF/text() }</column>\n<column name='cDEFPA'>{ $rs/KNVP/ROW/DEFPA/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "XD03 - Partner Functions",
  "compositionName" : "XK03"
}