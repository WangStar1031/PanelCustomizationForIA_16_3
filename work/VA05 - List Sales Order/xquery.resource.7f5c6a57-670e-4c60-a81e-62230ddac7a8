{
  "createdBy" : null,
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "e8832bdc-2a89-47f7-a73d-eec6accfc9f5",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\n\ndeclare variable $sKUNNR external;\ndeclare variable $sAUDAT external;\ndeclare variable $sVKORG external;\ndeclare variable $sVTWEG external;\ndeclare variable $sSPART external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\nlet $frDate := replace($sAUDAT/from,'-','')\nlet $toDate := replace($sAUDAT/to,'-','')\n\nlet $whereClause := local:addClause(\"\", $sKUNNR, concat(\"contains($vbak/KUNNR, &apos;\", $sKUNNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sVKORG, concat(\"contains($vbak/VKORG, &apos;\", $sVKORG, \"&apos;)\")) \nlet $whereClause := local:addClause($whereClause, $sVTWEG, concat(\"contains($vbak/VTWEG, &apos;\", $sVTWEG, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sSPART, concat(\"contains($vbak/SPART, &apos;\", $sSPART, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $frDate, concat(\"$vbak/AUDAT >= &apos;\", $frDate, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $toDate, concat(\"$vbak/AUDAT <= &apos;\", $toDate, \"&apos;\"))\n\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause \n\nlet $query-str := concat(\"for $vbak in /SAP/VBAK/ROW, $vbap in /SAP/VBAP/ROW[VBELN = $vbak/VBELN], $vbep in /SAP/VBEP/ROW[VBELN = $vbak/VBELN], $kna1 in /SAP/KNA1/ROW[KUNNR = $vbak/KUNNR] \", $whereClause, \" return <RS><VBAK>{ $vbak }</VBAK><VBAP>{ $vbap }</VBAP><VBEP>{ $vbep }</VBEP><KNA1>{$kna1}</KNA1></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n    let $EDATU := sias:showdate($rs/VBEP/ROW/EDATU/text())\n    let $AUDAT := sias:showdate($rs/VBAK/ROW/AUDAT/text())\n    let $VBELN := sias:trimzero($rs/VBAK/ROW/VBELN/text())\n    let $POSNR := sias:trimzero($rs/VBEP/ROW/POSNR/text())\n    \nreturn\n<row id='{string($rs/VBAK/ROW/@table:id)}'>\n<column name='cKUNNR'>{ $rs/VBAK/ROW/KUNNR/text() }</column>\n<column name='cEDATU'>{ $EDATU }</column>\n<column name='cVBELN'>{ $VBELN }</column>\n<column name='cPOSNR'>{ $POSNR }</column>\n<column name='cARKTX'>{ $rs/VBAP/ROW/ARKTX/text() }</column>\n<column name='cKWMENG'>{ $rs/VBAP/ROW/KWMENG/text() }</column>\n<column name='cVRKME'>{ $rs/VBAP/ROW/VRKME/text() }</column>\n<column name='cNETPR'>{ $rs/VBAP/ROW/NETPR/text() }</column>\n<column name='cMATNR'>{ $rs/VBAP/ROW/MATNR/text() }</column>\n<column name='cNAME1'>{ $rs/KNA1/ROW/NAME1/text() }</column>\n<column name='cVKORG'>{ $rs/VBAK/ROW/VKORG/text() }</column>\n<column name='cVKBUR'>{ $rs/VBAK/ROW/VKBUR/text() }</column>\n<column name='cVTWEG'>{ $rs/VBAK/ROW/VTWEG/text() }</column>\n<column name='cSPART'>{ $rs/VBAK/ROW/SPART/text() }</column>\n<column name='cAUDAT'>{ $AUDAT }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VA05 - List Sales Order",
  "compositionName" : "VA05"
}