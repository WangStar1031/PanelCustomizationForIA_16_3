{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "f70a1e95-6c10-4340-969c-ba554a429fe2",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKOKRS external;\ndeclare variable $sKSTAR external;\ndeclare variable $sDATAB external;\ndeclare variable $sDATBI external;\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\ndeclare function local:getCSKA($ktopl, $kstar)\n{\n for $cska in /SAP/CSKA/ROW[KTOPL = $ktopl and KSTAR = $kstar]\n \n return <RS><CSKA>{$cska}</CSKA></RS>\n};\ndeclare function local:getCSKU($ktopl, $kstar)\n{\n for $csku in /SAP/CSKU/ROW[KTOPL = $ktopl and KSTAR = $kstar and SPRAS = 'EN']\n \n return <RS><CSKU>{$csku}</CSKU></RS>\n};\ndeclare function local:getDescription($katyp)\n{\n\tswitch ($katyp)\n    case \"01\" return \"Primary costs/cost-reducing revenues\"\n    case \"03\" return \"Accrual/deferral per surcharge\"\n    case \"04\" return \"Accrual/deferral per debit = actual\"\n    case \"11\" return \"Revenues\"\n    case \"12\" return \"Sales deduction\" \n     case \"21\" return \"Internal settlement\"\n    case \"22\" return \"External settlement\"\n    case \"31\" return \"Order/project results analysis\"\n    case \"41\" return \"Overhead Rates\"\n    case \"42\" return \"Assessment\" \n    case \"43\" return \"Internal activity allocation\"\n    case \"90\" return \"Statistical cost element for balance sheet account\"\n    case \"50\" return \"Project-related incoming orders: Sales revenue\"\n    case \"51\" return \"Project-related incoming orders: Other revenues\"\n    case \"52\" return \"Project-related incoming orders: Costs\"\n    case \"61\" return \"Earned value\" \n    default return \"N/A\"\n}; \n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sKOKRS, concat(\"contains($cskb/KOKRS, &apos;\", $sKOKRS, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sKSTAR, concat(\"$cskb/KSTAR = &apos;\", $sKSTAR, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sDATAB, concat(\"$cskb/DATAB >= &apos;\", $sDATAB, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sDATBI, concat(\"$cskb/DATBI <= &apos;\", $sDATBI, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $cskb in /SAP/CSKB/ROW \", $whereClause, \" return <RS><CSKB>{ $cskb }</CSKB></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n   let $KATYP := local:getDescription($rs/CSKB/ROW/KATYP/text())\n   let $MSEHL := sias:get_t006a($rs/CSKB/ROW/MSEHI/text(), \"MSEHL\")\n   let $KTOPL := sias:get_tka01($rs/CSKB/ROW/KOKRS/text(),\"KTOPL\")\n   let $BEZEI := sias:get_tka01($rs/CSKB/ROW/KOKRS/text(),\"BEZEI\")\n   let $cska :=  local:getCSKA($KTOPL, $rs/CSKB/ROW/KSTAR/text() )\n   let $csku :=  local:getCSKU($KTOPL, $rs/CSKB/ROW/KSTAR/text() )\n    let $FKBER := sias:get_tfkbt($cska/CSKA/ROW/FUNC_AREA/text())\n    return\n\n<row id='{string($rs/CSKB/ROW/@table:id)}'>\n<column name='cKSTAR'>{ $rs/CSKB/ROW/KSTAR/text() }{' '}{$csku/CSKU/ROW/KTEXT/text()}</column>\n<column name='cKOKRS'>{ $rs/CSKB/ROW/KOKRS/text() }{' '}{$BEZEI}</column>\n<column name='cDATAB'>{ $rs/CSKB/ROW/DATAB/text() }</column>\n<column name='cDATBI'>{ $rs/CSKB/ROW/DATBI/text() }</column>\n<column name='cKTEXT'>{ $csku/CSKU/ROW/KTEXT/text() }</column>\n<column name='cLTEXT'>{ $csku/CSKU/ROW/LTEXT/text() }</column>\n<column name='cKATYP'>{ $rs/CSKB/ROW/KATYP/text() }{' '}{$KATYP}</column>\n<column name='cEIGEN'>{ $rs/CSKB/ROW/EIGEN/text() }</column>\n<column name='cFUNC_AREA'>{ $cska/CSKA/ROW/FUNC_AREA/text() }{' '}{$FKBER}</column>\n<column name='cMGEFL'>{ $rs/CSKB/ROW/MGEFL/text() }</column>\n<column name='cMSEHI'>{ $rs/CSKB/ROW/MSEHI/text() }{' '}{$MSEHL}</column>\n\n<column name='cKOSTL'>{ $rs/CSKB/ROW/KOSTL/text() }</column>\n<column name='cAUFNR'>{ $rs/CSKB/ROW/AUFNR/text() }</column>\n\n<column name='cUSNAM'>{ $rs/CSKB/ROW/USNAM/text() }</column>\n<column name='cERSDA'>{ $rs/CSKB/ROW/ERSDA/text() }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "KA03 - Display Cost Element",
  "compositionName" : "Set 1"
}