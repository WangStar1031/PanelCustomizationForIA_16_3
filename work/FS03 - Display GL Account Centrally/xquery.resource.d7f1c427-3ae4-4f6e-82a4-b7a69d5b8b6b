{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "4fde76f1-80bc-4385-b210-55cfb597a2ec",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sSAKNR external;\ndeclare variable $sBUKRS external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\ndeclare function local:get_t001($BUKRS)\n{\nfor $t001 in /SAP/T001/ROW\nwhere $t001/BUKRS = $BUKRS\nreturn\n<RS>\n<T001>{ $t001 }</T001>\n</RS>\n};\n\ndeclare function local:get_t004($KTOPL) (: KTOPL come from t001:)\n{\nfor $t004 in /SAP/T004/ROW\nwhere $t004/KTOPL = $KTOPL\nreturn\n<RS>\n<T004>{ $t004 }</T004>\n</RS>\n};\n\ndeclare function local:get_ska1($SAKNR,$KTOPL) (: KTOPL come from t001:)\n{\nfor $ska1 in /SAP/SKA1/ROW\nwhere $ska1/SAKNR = $SAKNR and $ska1/KTOPL = $KTOPL\nreturn\n<RS>\n<SKA1>{ $ska1 }</SKA1>\n</RS>\n\n};\n\ndeclare function local:show_gvtyp($GVTYP)\n{\n  switch($GVTYP) \n  case 'X' return \"P and L statement acct\"\n  case '' return \"Balance sheet acct\"\n  default return ''\n};\n\ndeclare function local:get_t005($LAND1)(:LAND 1 come from t001 :)\n{\nfor $t005 in /SAP/T005/ROW\nwhere $t005/LAND1 = $LAND1\nreturn \n<RS>\n<T005>{ $t005 }</T005>\n</RS>\n};\n\ndeclare function local:codea($MWSKZ)(: MWSKZ come from SKB1:)\n{\nswitch ($MWSKZ)\ncase \"-\" return '0019' \ncase \"+\" return '0020' \ncase \"*\" return '0021' \ncase \"<\" return '0022' \ncase \">\" return '0023' \ncase \"+B\" return '0024' \ncase \"-B\" return '0025' \ndefault return \"\"\n};\n\ndeclare function local:codea_result($v_textnr,$rs,$t005)\n{\n  if($v_textnr = '0019' or $v_textnr ='0020' or $v_textnr ='0021' or $v_textnr = '0022' or $v_textnr = '0023' or $v_textnr = '0024' or $v_textnr = '0025')\n  then let $resultA := sias:get_t050t($rs/SKB1/ROW/MANDT/text(),\"RF\",$v_textnr) return $resultA\n  else\n  (\n  let $resultA := sias:get_t007s($t005/T005/ROW/KALSM/text(), $rs/SKB1/ROW/MWSKZ/text())\n  return $resultA\n  )\n};\n\ndeclare function local:get_fm01t($t001)\n{\nfor $fm01t in /SAP/FM01T/ROW \nwhere $fm01t/SPRAS = 'EN' and $fm01t/FIKRS = $t001/T001/ROW/FIKRS\nreturn\n$fm01t/ROW/FITXT/text()\n};\n\ndeclare function local:get_fmfpot($fikrs,$fipos)\n{\nfor $fmfpot in /SAP/FMFPOT/ROW\nwhere $fmfpot/SPRAS = 'EN' and $fmfpot/FIKRS = $fikrs and $fmfpot/FIPOS = $fipos\nreturn \n$fmfpot/BESCHR/text()\n};\n\ndeclare function local:get_tka02_t($BUKRS) \n{\nfor $tka02 in /SAP/TKA02/ROW\nwhere $tka02/BUKRS = $BUKRS\nreturn\n<RS>\n<TKA02>{ $tka02 }</TKA02>\n</RS>\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sSAKNR, concat(\"contains($skb1/SAKNR, &apos;\", $sSAKNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"$skb1/BUKRS = &apos;\", $sBUKRS, \"&apos;\"))\n\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $skb1 in /SAP/SKB1/ROW \", $whereClause, \" return <RS><SKB1>{ $skb1 }</SKB1></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\n\tfor $rs in $main-query\n    let $t001 := local:get_t001($sBUKRS)\n    let $t004 := local:get_t004($t001/T001/ROW/KTOPL/text())\n    let $t005 := local:get_t005($t001/T001/ROW/LAND1/text())\n    let $ska1 := local:get_ska1($rs/SKB1/ROW/SAKNR/text(),$t001/T001/ROW/KTOPL/text())\n    let $FSTTX := sias:get_t004g($sBUKRS,$rs/SKA1/ROW/FSTAG/text())\n    let $GVTYP := local:show_gvtyp($ska1/SKA1/ROW/GVTYP/text())\n    let $txt20 := sias:get_skat($ska1/SKA1/ROW/KTOPL, $sSAKNR, \"TXT20\")\n    let $NAME1 := sias:get_t880($ska1/SKA1/ROW/VBUND/text(), \"NAME1\")\n    let $TXT50 := sias:get_skat($ska1/SKA1/ROW/KTOPL, $sSAKNR, \"TXT50\")\n    let $LTEXT := sias:get_tcurt($rs/SKB1/ROW/WAERS/text())\n    let $v_textnr := local:codea($rs/SKB1/ROW/MWSKZ/text())\n    let $resultA := local:codea_result($v_textnr,$rs,$t005)\n    let $TZUNT := sias:get_tzunt($rs/SKB1/ROW/ZUAWA/text())\n    let $SNAME := sias:get_t001s($sBUKRS, $rs/SKB1/ROW/BUSAB/text())\n    let $T036T := sias:get_t036t($rs/SKB1/ROW/MANDT/text(), $rs/SKB1/ROW/FDLEV/text())\n    let $t004t1 := sias:get_t004t($rs/SKB1/ROW/MANDT/text(), $t004/T004/ROW/KKTPL/text())\n    let $t004t2 := sias:get_t004t($rs/SKB1/ROW/MANDT/text(), $ska1/SKA1/ROW/KTOPL)\n    let $LANDX := sias:get_t005t($t001/T001/ROW/LAND1/text(), \"LANDX\")\n    let $fm01t :=local:get_fm01t($t001)\n    let $fmfpot := local:get_fmfpot($rs/SKB1/ROW/FIKRS/text(),$rs/SKB1/ROW/FIPOS/text())\n    let $tka02 := local:get_tka02_t($sBUKRS)\n    let $BEZEI := sias:get_tka01($tka02/KOKRS/text(),\"BEZEI\")    \n    return\n\n<row id='{string($rs/SKB1/ROW/@table:id)}'>\n<column name='cKTOKS'>{ $ska1/SKA1/ROW/KTOKS/text() }</column>\n<column name='cFUNC_AREA'>{ $ska1/SKA1/ROW/FUNC_AREA/text() }</column>\n<column name='cGVTYP'>{ $GVTYP }</column>\n<column name='cTXT20'>{ $txt20 }</column>\n<column name='cVBUND'>{ $ska1/SKA1/ROW/VBUND/text() } {' '} { $NAME1 }</column>\n<column name='cBILKT'>{ $ska1/SKA1/ROW/BILKT/text() } {' '} { $TXT50}</column>\n\n<column name='cWAERS'>{ $rs/SKB1/ROW/WAERS/text() } {' '} { $LTEXT }</column>\n<column name='cMWSKZ'>{ $rs/SKB1/ROW/MWSKZ/text() } {' '} { $resultA }</column>\n<column name='cZUAWA'>{ $rs/SKB1/ROW/ZUAWA/text() } {' ' } { $TZUNT }</column>\n\n<column name='cBEGRU'>{ $rs/SKB1/ROW/BEGRU/text() }</column>\n<column name='cBUSAB'>{ $rs/SKB1/ROW/BUSAB/text() } {'require function t001s/sname'}</column>\n\n<column name='cFSTAG'>{ $rs/SKB1/ROW/FSTAG/text() } {' '} { $FSTTX }</column>\n<column name='cFDLEV'>{ $rs/SKB1/ROW/FDLEV/text() } {' '} { $T036T }</column>\n<column name='cFIPOS'>{ $rs/SKB1/ROW/FIPOS/text() } {' '} { $fmfpot }</column>\n\n<column name='cKKTPL'>{ $t004/T004/ROW/KKTPL/text() } {' '} { $t004t1 }</column>\n<column name='cKTOPL'>{ $t001/T001/ROW/KTOPL/text() } {' '} { $t004t2 }</column>\n<column name='cLAND1'>{ $t001/T001/ROW/LAND1/text() } {' '} { $LANDX }</column>\n<column name='cFIKRS'>{ $rs/T001/ROW/FIKRS/text() } {' '} { $fm01t }</column>\n\n<column name='cKOKRS'>{ $tka02/TKA02/ROW/KOKRS/text() } {' '} { $BEZEI }</column>\n\n\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "FS03 - Display GL Account Centrally",
  "compositionName" : "Set 1"
}