{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "9d1b8646-fedc-42a5-9925-8b9bf919f6b9",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sBUDAT external;\ndeclare variable $sBUKRS external;\ndeclare variable $sGJAHR external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:calculation1($SHKZG,$HWBAS)\n{\nif($SHKZG = 'H')\nthen \nlet $Calc1 := $HWBAS * -1\nreturn $Calc1\nelse\nlet $Calc1 := $HWBAS\n\nreturn  $Calc1\n};\ndeclare function local:calculation2($SHKZG,$HWSTE)\n{\nif($SHKZG = 'H')\nthen \nlet $Calc2 := $HWSTE * -1\nreturn $Calc2\nelse\nlet $Calc2 := $HWSTE\n\nreturn  $Calc2\n};\n\ndeclare function local:calculation3($Calc1,$Calc2)\n{\nlet $Calc3 := $Calc1 + $Calc2\nreturn $Calc3\n};\n\ndeclare function local:calculation4($SHKZG,$FWSTE)\n{\nif($SHKZG = 'H')\nthen \nlet $Calc4 := $FWSTE * -1\nreturn $Calc4\nelse\nlet $Calc4 := $FWSTE\n\nreturn  $Calc4\n};\ndeclare function local:getTaxType($mwart)\n{\n\tif($mwart = 'A')\n    then\n    let $result := \"Output Tax\"\n    return $result\n    else if($mwart = 'V')\n    then\n    let $result := \"Input Tax\"\n    return $result\n    else()\n};\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n\n(: Build a conditional Where clause :)\nlet $frDate := replace($sBUDAT/from,'-','')\nlet $toDate := replace($sBUDAT/to,'-','')\nlet $whereClause := local:addClause(\"\", $sBUKRS, concat(\"contains($bkpf/BUKRS, &apos;\", $sBUKRS, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sGJAHR, concat(\"$bkpf/GJAHR = &apos;\", $sGJAHR, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $frDate, concat(\"$bkpf/BUDAT >= &apos;\", $frDate, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $toDate, concat(\"$bkpf/BUDAT <= &apos;\", $toDate, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $bkpf in /SAP/BKPF/ROW, $bset in /SAP/BSET/ROW[BUKRS = $bkpf/BUKRS and GJAHR = $bkpf/GJAHR and BELNR = $bkpf/BELNR] \", $whereClause, \" return <RS><BKPF>{ $bkpf }</BKPF><BSET>{ $bset }</BSET></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $LAND1 := sias:get_t001($rs/BKPF/ROW/BUKRS/text(), \"LAND1\")\n    let $KALSM := sias:get_t005($LAND1, \"KALSM\")\n    let $MWART := sias:get_t007a($rs/BKPF/ROW/MANDT/text(), $KALSM,$rs/BSET/ROW/MWSKZ/text())\n    let $taxType := local:getTaxType($MWART)\n    \n   let $BUDAT := sias:showdate($rs/BKPF/ROW/BUDAT/text())\n   let $WAERS := sias:get_t001($rs/BKPF/ROW/BUKRS/text(), 'BUTXT')\n    let $ORT01 := sias:get_t001($rs/BKPF/ROW/BUKRS/text(), 'ORT01')\n    let $Calc1 := local:calculation1($rs/BSET/ROW/SHKZG/text(),$rs/BSET/ROW/HWBAS/text())\n     let $Calc2 := local:calculation2($rs/BSET/ROW/SHKZG/text(),$rs/BSET/ROW/HWSTE/text())\n     let $Calc3 := local:calculation3($Calc1,$Calc2)\n     let $Calc4 := local:calculation4($rs/BSET/ROW/SHKZG/text(),$rs/BSET/ROW/FWSTE/text())\n    return\n\n<row id='{string($rs/BKPF/ROW/@table:id)}'>\n<column name='cBUTXT'>{ $WAERS }</column>\n<column name='cLOCATION'>{ $ORT01 }</column>\n<column name='cBUDAT'>{ $BUDAT }</column>\n<column name='cTAX'>{$taxType}</column>\n\n\n\n<column name='cBUKRS'>{ $rs/BKPF/ROW/BUKRS/text() }</column>\n<column name='cMONAT'>{ $rs/BKPF/ROW/MONAT/text() }</column>\n<column name='cGJAHR'>{ $rs/BKPF/ROW/GJAHR/text() }</column>\n<column name='cBUDAT2'>{ $BUDAT }</column>\n<column name='cBELNR'>{ $rs/BKPF/ROW/BELNR/text() }</column>\n<column name='cXBLNR_ALT'>{ $rs/BKPF/ROW/XBLNR_ALT/text() }</column>\n<column name='cMWSKZ'>{ $rs/BSET/ROW/MWSKZ/text() }</column>\n<column name='cKTOSL'>{ $rs/BSET/ROW/KTOSL/text() }</column>\n<column name='cHWBAS'>{ $Calc1 }</column>\n<column name='cHWSTE'>{ $Calc2 }</column>\n<column name='cCALC'>{ $Calc3 }</column>\n<column name='cFWSTE'>{ $Calc4 }</column>\n<column name='cXBLNR_ALT2'>{ $rs/BKPF/ROW/XBLNR_ALT/text() }</column>\n\n\n<column name='cBUKRS2'>{ $rs/BKPF/ROW/BUKRS/text() }</column>\n<column name='cMONAT2'>{ $rs/BKPF/ROW/MONAT/text()}</column>\n<column name='cGJAHR2'>{ $rs/BKPF/ROW/GJAHR/text() }</column>\n<column name='cBUDAT3'>{  $BUDAT  }</column>\n<column name='cBELNR2'>{ $rs/BKPF/ROW/BELNR/text() }</column>\n<column name='cXBLNR_ALT3'>{ $rs/BKPF/ROW/XBLNR_ALT/text() }</column>\n<column name='cMWSKZ2'>{ $rs/BSET/ROW/MWSKZ/text() }</column>\n<column name='cKTOSL2'>{$rs/BSET/ROW/KTOSL/text() }</column>\n<column name='cHWBAS2'>{ $Calc1 }</column>\n<column name='cHWSTE2'>{ $Calc2 }</column>\n<column name='cCALC2'>{ $Calc3 }</column>\n<column name='cFWSTE2'>{ $Calc4 }</column>\n<column name='cXBLNR_ALT4'>{ $rs/BKPF/ROW/XBLNR_ALT/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "S_ALR_87012357 - Advance Return for Tax on Sales and Purchases",
  "compositionName" : "Set 1"
}