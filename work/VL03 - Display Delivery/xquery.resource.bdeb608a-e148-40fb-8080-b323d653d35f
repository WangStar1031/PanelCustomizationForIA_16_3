{
  "createdBy" : "sue@iacustomer.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "8ce6dbdf-0acb-4250-85e2-a6d0dc1b24ca",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\ndeclare variable $sVBELN external;\n\ndeclare function local:get_partner($vbeln)\n{\n    for $likp in /SAP/LIKP/ROW[VBELN=$vbeln]\n    return $likp/KUNNR/text()\n};\n\ndeclare function local:if_empty($knva)\n{\n  if (empty($knva) or $knva = \"\") then \"000000\"\n  else ($knva) \n         \n};\n\ndeclare function local:get_knva($kunnr,$ablad)        \n{\n  for $knva in /SAP/KNVA/ROW[KUNNR = $kunnr and ABLAD = $ablad] \n  return \n  <RS><KNVA>{ $knva }</KNVA></RS>\n};        \n\ndeclare function local:get_time_value($knva)\n{\n\tlet $time_value :=\n      let $SAAB1 := if(fn:exists($knva/KNVA/ROW/SAAB1/text())) then ($knva/KNVA/ROW/SAAB1/text()) else (\"000000\")\n      let $SABI1 := if(fn:exists($knva/KNVA/ROW/SABI1/text())) then ($knva/KNVA/ROW/SABI1/text()) else (\"000000\")\n      let $SAAB2 := if(fn:exists($knva/KNVA/ROW/SAAB2/text())) then ($knva/KNVA/ROW/SAAB2/text()) else (\"000000\")\n      let $SABI2 := if(fn:exists($knva/KNVA/ROW/SABI2/text())) then ($knva/KNVA/ROW/SABI2/text()) else (\"000000\")\n      let $SOAB1 := if(fn:exists($knva/KNVA/ROW/SOAB1/text())) then ($knva/KNVA/ROW/SOAB1/text()) else (\"000000\")\n      let $SOBI1 := if(fn:exists($knva/KNVA/ROW/SOBI1/text())) then ($knva/KNVA/ROW/SOBI1/text()) else (\"000000\")\n      let $SOAB2 := if(fn:exists($knva/KNVA/ROW/SOAB2/text())) then ($knva/KNVA/ROW/SOAB2/text()) else (\"000000\")\n      let $SOBI2 := if(fn:exists($knva/KNVA/ROW/SOBI2/text())) then ($knva/KNVA/ROW/SOBI2/text()) else (\"000000\")\n      let $MOAB1 := if(fn:exists($knva/KNVA/ROW/MOAB1/text())) then ($knva/KNVA/ROW/MOAB1/text()) else (\"000000\")\n      let $MOBI1 := if(fn:exists($knva/KNVA/ROW/MOBI1/text())) then ($knva/KNVA/ROW/MOBI1/text()) else (\"000000\")\n      let $MOAB2 := if(fn:exists($knva/KNVA/ROW/MOAB2/text())) then ($knva/KNVA/ROW/MOAB2/text()) else (\"000000\")\n      let $MOBI2 := if(fn:exists($knva/KNVA/ROW/MOBI2/text())) then ($knva/KNVA/ROW/MOBI2/text()) else (\"000000\")\n      let $DIAB1 := if(fn:exists($knva/KNVA/ROW/DIAB1/text())) then ($knva/KNVA/ROW/DIAB1/text()) else (\"000000\")\n      let $DIBI1 := if(fn:exists($knva/KNVA/ROW/DIBI1/text())) then ($knva/KNVA/ROW/DIBI1/text()) else (\"000000\")\n      let $DIAB2 := if(fn:exists($knva/KNVA/ROW/DIAB2/text())) then ($knva/KNVA/ROW/DIAB2/text()) else (\"000000\")\n      let $DIBI2 := if(fn:exists($knva/KNVA/ROW/DIBI2/text())) then ($knva/KNVA/ROW/DIBI2/text()) else (\"000000\")\n      let $MIAB1 := if(fn:exists($knva/KNVA/ROW/MIAB1/text())) then ($knva/KNVA/ROW/MIAB1/text()) else (\"000000\")\n      let $MIBI1 := if(fn:exists($knva/KNVA/ROW/MIBI1/text())) then ($knva/KNVA/ROW/MIBI1/text()) else (\"000000\")\n      let $MIAB2 := if(fn:exists($knva/KNVA/ROW/MIAB2/text())) then ($knva/KNVA/ROW/MIAB2/text()) else (\"000000\")\n      let $MIBI2 := if(fn:exists($knva/KNVA/ROW/MIBI2/text())) then ($knva/KNVA/ROW/MIBI2/text()) else (\"000000\")\n      let $DOAB1 := if(fn:exists($knva/KNVA/ROW/DOAB1/text())) then ($knva/KNVA/ROW/DOAB1/text()) else (\"000000\")\n      let $DOBI1 := if(fn:exists($knva/KNVA/ROW/DOBI1/text())) then ($knva/KNVA/ROW/DOBI1/text()) else (\"000000\")\n      let $DOAB2 := if(fn:exists($knva/KNVA/ROW/DOAB2/text())) then ($knva/KNVA/ROW/DOAB2/text()) else (\"000000\")\n      let $DOBI2 := if(fn:exists($knva/KNVA/ROW/DOBI2/text())) then ($knva/KNVA/ROW/DOBI2/text()) else (\"000000\")\n      let $FRAB1 := if(fn:exists($knva/KNVA/ROW/FRAB1/text())) then ($knva/KNVA/ROW/FRAB1/text()) else (\"000000\")\n      let $FRBI1 := if(fn:exists($knva/KNVA/ROW/FRBI1/text())) then ($knva/KNVA/ROW/FRBI1/text()) else (\"000000\")\n      let $FRAB2 := if(fn:exists($knva/KNVA/ROW/FRAB2/text())) then ($knva/KNVA/ROW/FRAB2/text()) else (\"000000\")\n      let $FRBI2 := if(fn:exists($knva/KNVA/ROW/FRBI2/text())) then ($knva/KNVA/ROW/FRBI2/text()) else (\"000000\")\n    return\n    \n  <VAL>\n  <ROW><SAAB1>{ $SAAB1 }</SAAB1><SABI1>{ $SABI1 }</SABI1><SAAB2>{ $SAAB2 }</SAAB2><SABI2>{ $SABI2 }</SABI2></ROW>\n  <ROW><SOAB1>{ $SOAB1 }</SOAB1><SOBI1>{ $SOBI1 }</SOBI1><SOAB2>{ $SOAB2 }</SOAB2><SOBI2>{ $SOBI2 }</SOBI2></ROW>\n  <ROW><MOAB1>{ $MOAB1 }</MOAB1><MOBI1>{ $MOBI1 }</MOBI1><MOAB2>{ $MOAB2 }</MOAB2><MOBI2>{ $MOBI2 }</MOBI2></ROW>\n  <ROW><DIAB1>{ $DIAB1 }</DIAB1><DIBI1>{ $DIBI1 }</DIBI1><DIAB2>{ $DIAB2 }</DIAB2><DIBI2>{ $DIBI2 }</DIBI2></ROW>\n  <ROW><MIAB1>{ $MIAB1 }</MIAB1><MIBI1>{ $MIBI1 }</MIBI1><MIAB2>{ $MIAB2 }</MIAB2><MIBI2>{ $MIAB2 }</MIBI2></ROW>\n  <ROW><DOAB1>{ $DOAB1 }</DOAB1><DOBI1>{ $DOBI1 }</DOBI1><DOAB2>{ $DOAB2 }</DOAB2><DOBI2>{ $DOBI2 }</DOBI2></ROW>\n  <ROW><FRAB1>{ $FRAB1 }</FRAB1><FRBI1>{ $FRBI1 }</FRBI1><FRAB2>{ $FRAB2 }</FRAB2><FRBI2>{ $FRBI2 }</FRBI2></ROW>\n  </VAL>  \n  \n  return $time_value\n};\n\ndeclare function local:get_time($weekday_no,$time_value)        \n{\t\t\n    switch ($weekday_no) \n    case 0  return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/SAAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/SABI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/SAAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/SABI2)))    \n    case 1 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/SOAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/SOBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/SOAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/SOBI2)))   \n    case 2 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/MOAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/MOBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/MOAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/MOBI2)))   \n    case 3 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/DIAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/DIBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/DIAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/DIBI2)))    \n    case 4 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/MIAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/MIBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/MIAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/MIBI2)))    \n    case 5 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/DOAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/DOBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/DOAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/DOBI2)))   \n    case 6 return concat(sias:showtime(local:if_empty($time_value/VAL/ROW/FRAB1)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/FRBI1)),\" and \",sias:showtime(local:if_empty($time_value/VAL/ROW/FRAB2)),\" - \",sias:showtime(local:if_empty($time_value/VAL/ROW/FRBI2)))\n    default return \"Could not calculate delivery time range\"\n}; \n\ndeclare function local:get_kna1($kunnr)\n{\n   for $kna1 in /SAP/KNA1/ROW[KUNNR=$kunnr]\n   return concat($kna1/NAME1/text(),'',$kna1/STRAS/text(),'/',$kna1/LAND1/text(),' ',$kna1/PSLTX/text(),'/',$kna1/ORT01/text())\n};\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n}; \n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\ndeclare function local:get_ttgrt($mandt,$tragr)\n{\nfor $ttgrt in /SAP/TTGRT/ROW\nwhere $ttgrt/MANDT = $mandt and $ttgrt/SPRAS = 'EN' and $ttgrt/TRAGR = $tragr\nreturn $ttgrt/VTEXT/text()\n};\n\nlet $whereClause := local:addClause(\"\", $sVBELN, concat(\"contains($likp/VBELN , &apos;\", $sVBELN, \"&apos;)\" ))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n \n\nlet $query-str := concat(\"for $likp in /SAP/LIKP/ROW,$vbuk in /SAP/VBUK/ROW[VBELN = $likp/VBELN] \", $whereClause, \" return <RS><LIKP>{ $likp }</LIKP><VBUK>{ $vbuk }</VBUK></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n               let $knva := local:get_knva($rs/LIKP/ROW/KUNNR/text(),$rs/LIKP/ROW/ABLAD/text())\n               let $time_value := local:get_time_value($knva)\n               let $SHIPTO := local:get_partner($rs/LIKP/ROW/VBELN/text())\n               let $KNA1 := local:get_kna1($rs/LIKP/ROW/KUNNR/text())\n               let $BLDAT := sias:showdate($rs/LIKP/ROW/BLDAT/text())\n               let $WADAT_IST := sias:showdate($rs/LIKP/ROW/WADAT_IST/text())\n               let $WADAT := sias:showdate($rs/LIKP/ROW/WADAT/text())\n               let $VSTEL := sias:get_tvstt($rs/LIKP/ROW/VSTEL/text())\n               let $WBSTK := sias:get_tvbst(\"VBUK\", \"WBSTK\", $rs/VBUK/ROW/WBSTK/text())\n               let $LIFSK := sias:get_tvlst($rs/LIKP/ROW/LIFSK/text())\n               let $CMGST := sias:get_tvbst(\"VBUK\", \"CMGST\", $rs/VBUK/ROW/CMGST/text())\n               let $FAKSP := sias:get_tvfst($rs/LIKP/ROW/FAKSP/text())\n               let $FKSTK := sias:get_tvbst(\"VBUK\", \"FKSTK\", $rs/VBUK/ROW/FKSTK/text())\n               let $ABSSC2 := sias:get_t691n($rs/LIKP/ROW/ABSSC/text())\n               let $LFDAT := sias:showdate($rs/LIKP/ROW/LFDAT/text())\n               \n               let $ROUTE := sias:get_tvrot($rs/LIKP/ROW/ROUTE/text())\n               let $TDDAT := sias:showdate($rs/LIKP/ROW/TDDAT/text())\n               let $WADAT := sias:showdate($rs/LIKP/ROW/WADAT/text())\n               let $VSBED2 := sias:get_tvsbt($rs/LIKP/ROW/VSBED/text())\n               let $LDDAT := sias:showdate($rs/LIKP/ROW/LDDAT/text())\n               let $TRATY := sias:get_tvtyt($rs/LIKP/ROW/TRATY/text())\n               let $TRSTA := sias:get_tvbst(\"VBUK\", \"TRSTA\", $rs/VBUK/ROW/TRSTA/text())\n               let $TRAGR := sias:trimzero($rs/LIKP/ROW/TRAGR/text())\n               let $TTDAT := sias:showdate($rs/LIKP/ROW/TTDAT/text())\n               let $KODAT := sias:showdate($rs/LIKP/ROW/KODAT/text())\n               let $KOUHR1 := if(fn:exists($rs/LIKP/ROW/KOUHR/text())) then ($rs/LIKP/ROW/KOUHR/text()) else (\"000000\")\n               let $TDUHR1 := if(fn:exists($rs/LIKP/ROW/TDUHR/text())) then ($rs/LIKP/ROW/TDUHR/text()) else (\"000000\")\n               let $LDUHR1 := if(fn:exists($rs/LIKP/ROW/LDUHR/text())) then ($rs/LIKP/ROW/LDUHR/text()) else (\"000000\")\n               let $WAUHR1 := if(fn:exists($rs/LIKP/ROW/KOUHR/text())) then ($rs/LIKP/ROW/KOUHR/text()) else (\"000000\")\n               let $LFUHR1 := if(fn:exists($rs/LIKP/ROW/LFUHR/text())) then ($rs/LIKP/ROW/LFUHR/text()) else (\"000000\") \n               let $KOUHR := sias:showtime($KOUHR1)\n               let $TDUHR := sias:showtime($TDUHR1)               \n               let $LDUHR := sias:showtime($LDUHR1)\n               let $WAUHR := sias:showtime($WAUHR1)\n               let $LFUHR := sias:showtime($LFUHR1) \n               (:let $KOUHR := sias:showtime($rs/LIKP/ROW/KOUHR/text())\n               let $TDUHR := sias:showtime($rs/LIKP/ROW/TDUHR/text())               \n               let $LDUHR := sias:showtime($rs/LIKP/ROW/LDUHR/text())\n               let $WAUHR := sias:showtime($rs/LIKP/ROW/KOUHR/text())\n               let $LFUHR := sias:showtime($rs/LIKP/ROW/LFUHR/text()) :)\n\n               let $ABSSC := sias:trimzero($rs/LIKP/ROW/ABSSC/text())\n               let $DAY := sias:weekday_name(sias:weekday_no($LFDAT))\n               let $DAY2 := sias:weekday_no($LFDAT)\n               let $TIME := local:get_time($DAY2,$time_value)\n               let $SHIPTO_trim := sias:trimzero($SHIPTO)\n               let $VBELN := sias:trimzero($rs/LIKP/ROW/VBELN/text())\n               let $TTGRT := sias:get_ttgrt($rs/LIKP/ROW/MANDT/text(),$rs/LIKP/ROW/TRAGR/text())\n               \n               let $CLASSNAME := 'LIKP'\n               let $OBJKEY := $rs/LIKP/ROW/VBELN/text()\n               let $GSCOUNT := count(sias:get_gosdoc($CLASSNAME,$OBJKEY))\n\n     \t\t\t\nreturn\n<row id='{string($rs/LIKP/ROW/@table:id)}'>\n<column name='cCLASSNAME'>{ $CLASSNAME }</column>\n<column name='cOBJKEY'>{ $OBJKEY }</column>\n\n<column name='cDOCCOUNT'>{ $GSCOUNT} </column>\n<column name='cSHIPTO'>{ $SHIPTO_trim } { ' ' } { $KNA1 } </column>\n<column name='cVBELN'>{ $VBELN }</column>\n<column name='cBLDAT'>{ $BLDAT }</column>\n<column name='cWADAT'>{ $WADAT }</column>\n<column name='cBTGEW'>{ $rs/LIKP/ROW/BTGEW/text() } { ' ' } { $rs/LIKP/ROW/GEWEI/text() }</column>\n<column name='cWADAT_IST'>{ $WADAT_IST }</column>\n<column name='cANZPK'>{ $rs/LIKP/ROW/ANZPK/text() }</column>\n\n<column name='cLFART'>{ $rs/LIKP/ROW/LFART/text() }</column>\n<column name='cLIFEX'>{ $rs/LIKP/ROW/LIFEX/text() }</column>\n<column name='cXBLNR'>{ $rs/LIKP/ROW/XBLNR/text() }</column>\n<column name='cVSTEL'>{ $rs/LIKP/ROW/VSTEL/text() } { ' ' } { $VSTEL }</column>\n<column name='cKODAT'>{ $KODAT } { ' ' } { $KOUHR }</column>\n<column name='cBEROT'>{ $rs/LIKP/ROW/BEROT/text() }</column>\n<column name='cTDDAT'>{ $TDDAT } { ' ' } { $TDUHR }</column>\n<column name='cVSBED'>{ $rs/LIKP/ROW/VBSED/text() } { ' ' } { $VSBED2 }</column>\n<column name='cLDDAT'>{ $LDDAT } { ' ' } { $LDUHR }</column>\n<column name='cLSTEL'>{ $rs/LIKP/ROW/LSTEL/text() }</column>\n<column name='cWADAT'>{ $WADAT } { ' ' } { $WAUHR }</column>\n<column name='cWBSTK'>{ $rs/VBUK/ROW/WBSTK/text() } { ' ' } { $WBSTK }</column>\n<column name='cLFDAT'>{ $LFDAT } { ' ' } { $LFUHR } { ' ' } { $DAY }</column>\n<column name='cTIME'>{ $TIME }</column>\n<column name='cLGNUM'>{ $rs/LIKP/ROW/LGNUM/text() } { ' ' } { $rs/LIKP/ROW/LISPL/text() }</column>\n<column name='cVLSTK'>{ $rs/LIKP/ROW/VLSTK/text() }</column>\n<column name='cBTGEW'>{ $rs/LIKP/ROW/BTGEW/text() } { ' ' } { $rs/LIKP/ROW/GEWEI/text() }</column>\n<column name='cANZPK'>{ $rs/LIKP/ROW/ANZPK/text() }</column>\n<column name='cNTGEW'>{ $rs/LIKP/ROW/NTGEW/text() }</column>\n<column name='cVOLUM'>{ $rs/LIKP/ROW/VOLUM/text() } { ' ' } { $rs/LIKP/ROW/VOLEH/text() }</column>\n<column name='cLIFSK'>{ $rs/LIKP/ROW/LIFSK/text() } { ' ' } { $LIFSK }</column>\n<column name='cCMGST'>{ $rs/VBUK/ROW/CMGST/text() } { ' ' } { $CMGST }</column>\n<column name='cLPRIO'>{ $rs/LIKP/ROW/LPRIO/text() }</column>\n<column name='cAUTLF'>{ $rs/LIKP/ROW/AUTLF/text() }</column>\n<column name='cKZAZU'>{ $rs/LIKP/ROW/KZAZU/text() }</column>\n<column name='cFAKSK'>{ $rs/LIKP/ROW/FAKSK/text() } { ' ' } { $FAKSP }</column>\n<column name='cFKSTK'>{ $rs/VBUK/ROW/FKSTK/text() } { ' ' } { $FKSTK }</column>\n<column name='cPROLI'>{ $rs/LIKP/ROW/PROLI/text() }</column>\n<column name='cCONT_DG'>{ $rs/LIKP/ROW/CONT_DG/text() }</column>\n<column name='cABSSC'>{ $ABSSC } { ' ' } { $ABSSC2 }</column>\n<column name='cLCNUM'>{ $rs/LIKP/ROW/LCNUM/text() }</column>\n<column name='cAKPRZ'>{ $rs/LIKP/ROW/AKPRZ/text() }</column>\n<column name='cAIDAT'>{ $rs/AKKP/ROW/AIDAT/text() }</column>\n<column name='cAHDAT'>{ $rs/AKKP/ROW/AHDAT/text() }</column>\n<column name='cAXDAT'>{ $rs/AKKP/ROW/AXDAT/text() }</column>\n<column name='cANYTG'>{ $rs/AKKP/ROW/ANYTG/text() }</column>\n\n<column name='cSHIPTO'>{ $SHIPTO } { ' ' } { $KNA1 }</column>\n<column name='cABLAD'>{ $rs/LIKP/ROW/ABLAD/text() }</column>\n<column name='cLFDAT'>{ $LFDAT } { ' ' } { $LFUHR } { ' ' } { $DAY }</column> \n<column name='cLGNUM2'>{ $rs/LIKP/ROW/LGNUM/text() }</column>\n<column name='cLGTOR'>{ $rs/LIKP/ROW/LGTOR/text() }</column>\n<column name='cLGBZO'>{ $rs/LIKP/ROW/LGBZO/text() }</column>\n<column name='cROUTE'>{ $rs/LIKP/ROW/ROUTE/text() } { ' ' } { $ROUTE }</column>\n<column name='cAULWE'>{ $rs/LIKP/ROW/AULWE/text() }</column>\n<column name='cINCO1'>{ $rs/LIKP/ROW/INCO1/text() } { ' ' } { $rs/LIKP/ROW/INCO2/text()}</column>\n<column name='cTDDAT1'>{ $TDDAT }</column>\n<column name='cLDDAT1'>{ $LDDAT }</column>\n<column name='cLSTEL'>{ $rs/LIKP/ROW/LSTEL/text() }</column>\n<column name='cWADAT1'>{ $WADAT }</column>\n<column name='cTRAGR1'>{ $TRAGR }</column>\n<column name='cBOLNR'>{ $rs/LIKP/ROW/BOLNR/text() }</column>\n<column name='cXABLN'>{ $rs/LIKP/ROW/XABLN/text() }</column>\n<column name='cTRATY'>{ $rs/LIKP/ROW/TRATY/text() } { ' ' } { $TRATY }</column>\n<column name='cTRAID'>{ $rs/LIKP/ROW/TRAID/text() }</column>\n<column name='cTRSTA'>{ $rs/VBUK/ROW/TRSTA/text() } { ' ' } { $TRSTA }</column>\n<column name='cTRSPG'>{ $rs/LIKP/ROW/TRSPG/text() }</column>\n<column name='cBTGEW'>{ $rs/LIKP/ROW/BTGEW/text() }</column>\n<column name='cGEWEI'>{ $rs/LIKP/ROW/GEWEI/text() }</column>\n<column name='cVOLUM'>{ $rs/LIKP/ROW/VOLUM/text() }</column>\n<column name='cVOLEH'>{ $rs/LIKP/ROW/VOLEH/text() }</column>\n<column name='cTRAGR'>{ $rs/LIKP/ROW/TRAGR/text() } {' '} { $TTGRT }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VL03 - Display Delivery",
  "compositionName" : "VL03 - Display Delivery"
}