{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "63cbaa75-e11b-4b65-a5c6-c4bf64ee88f5",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKOKRS external;\ndeclare variable $sKOSTL external;\ndeclare variable $sDATAB external;\ndeclare variable $sDATBI external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sKOKRS, concat(\"contains($csks/KOKRS, &apos;\", $sKOKRS, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sKOSTL, concat(\"$csks/KOSTL = &apos;\", $sKOSTL, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sDATAB, concat(\"$csks/DATAB >= &apos;\", $sDATAB, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sDATBI, concat(\"$csks/DATBI <= &apos;\", $sDATBI, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $csks in /SAP/CSKS/ROW, $cskt in /SAP/CSKT/ROW[SPRAS = 'EN' and KOKRS = $csks/KOKRS and KOSTL = $csks/KOSTL], $cepct in /SAP/CEPCT/ROW[SPRAS = 'EN' and PRCTR = $csks/PRCTR and KOKRS = $csks/KOKRS and DATBI <= $csks/DATBI]\", $whereClause, \" return <RS><CSKS>{ $csks }</CSKS><CSKT>{ $cskt }</CSKT><CEPCT>{ $cepct }</CEPCT></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n   let $KTEXT := sias:get_tkt05($rs/CSKS/ROW/KOSAR/text())\n   let $BEZEI := sias:get_tka01($rs/CSKS/ROW/KOKRS/text(),\"BEZEI\")\n   let $BUTXT := sias:get_t001($rs/CSKS/ROW/BUKRS/text(), \"BUTXT\")\n    let $FKBTX := sias:get_tfkbt($rs/CSKS/ROW/FUNC_AREA/text())\n   let $GTEXT := sias:get_tgsbt($rs/CSKS/ROW/GSBER/text())\n    return\n\n<row id='{string($rs/CSKS/ROW/@table:id)}'>\n<column name='cKOSTL'>{ $rs/CSKS/ROW/KOSTL/text() }</column>\n<column name='cKOKRS'>{ $rs/CSKS/ROW/KOKRS/text() }{' '}{ $BEZEI }</column>\n<column name='cDATAB'>{ $rs/CSKS/ROW/DATAB/text() }</column>\n<column name='cDATBI'>{ $rs/CSKS/ROW/DATBI/text() }</column>\n<column name='cKTEXT'>{ $rs/CSKT/ROW/KTEXT/text() }</column>\n<column name='cLTEXT'>{ $rs/CSKT/ROW/LTEXT/text() }</column>\n<column name='cVERAK_USER'>{ $rs/CSKS/ROW/VERAK_USER/text() }</column>\n<column name='cVERAK'>{ $rs/CSKS/ROW/VERAK/text() }</column>\n<column name='cABTEI'>{ $rs/CSKS/ROW/ABTEI/text() }</column>\n<column name='cKOSAR'>{$rs/CSKS/ROW/KOSAR/text() }{' '}{ $KTEXT }</column>\n<column name='cKHINR'>{ $rs/CSKS/ROW/KHINR/text() }</column>\n<column name='cBUKRS'>{ $rs/CSKS/ROW/BUKRS/text() }{' '}{ $BUTXT }</column>\n<column name='cGSBER'>{ $rs/CSKS/ROW/GSBER/text() }{' '}{ $GTEXT }</column>\n<column name='cFUNC_AREA'>{ $rs/CSKS/ROW/FUNC_AREA/text() }</column>\n<column name='cWAERS'>{ $rs/CSKS/ROW/WAERS/text() }</column>\n<column name='cPRCTR'>{ $rs/CSKS/ROW/PRCTR/text() }{' '}{$rs/CEPCT/ROW/KTEXT/text()}</column>\n\n<column name='cCPI_TEMPL'>{ $rs/CSKS/ROW/CPI_TEMPL/text() }</column>\n<column name='cCPD_TEMPL'>{ $rs/CSKS/ROW/CPD_TEMPL/text() }</column>\n<column name='cSCI_TEMPL'>{ $rs/CSKS/ROW/SCI_TEMPL/text() }</column>\n<column name='cSCD_TEMPL'>{ $rs/CSKS/ROW/SCD_TEMPL/text() }</column>\n<column name='cKALSM'>{ $rs/CSKS/ROW/KALSM/text() }</column>\n\n<column name='cANRED'>{ $rs/CSKS/ROW/ANRED/text() }</column>\n<column name='cNAME1'>{ $rs/CSKS/ROW/NAME1/text() }</column>\n<column name='cNAME2'>{ $rs/CSKS/ROW/NAME2/text() }</column>\n<column name='cNAME3'>{ $rs/CSKS/ROW/NAME3/text() }</column>\n<column name='cNAME4'>{ $rs/CSKS/ROW/NAME4/text() }</column>\n<column name='cSTRAS'>{ $rs/CSKS/ROW/STRAS/text() }</column>\n<column name='cPFACH'>{ $rs/CSKS/ROW/PFACH/text() }</column>\n<column name='cORT01'>{ $rs/CSKS/ROW/ORT01/text() }</column>\n<column name='cPSTLZ'>{$rs/CSKS/ROW/PSTLZ/text() }</column>\n<column name='cORT02'>{ $rs/CSKS/ROW/ORT02/text() }</column>\n<column name='cPSTL2'>{ $rs/CSKS/ROW/PSTL2/text() }</column>\n<column name='cLAND1'>{ $rs/CSKS/ROW/LAND1/text()}</column>\n<column name='cREGIO'>{ $rs/CSKS/ROW/REGIO/text() }</column>\n<column name='cTXJCD'>{ $rs/CSKS/ROW/TXJCD/text() }</column>\n\n<column name='cSPRAS'>{ $rs/CSKS/ROW/SPRAS/text() }</column>\n<column name='cTELF1'>{ $rs/CSKS/ROW/TELF1/text() }</column>\n<column name='cTELF2'>{ $rs/CSKS/ROW/TELF2/text() }</column>\n<column name='cTELBX'>{ $rs/CSKS/ROW/TELBX/text() }</column>\n<column name='cTELX1'>{$rs/CSKS/ROW/TELX1/text() }</column>\n<column name='cTELFX'>{ $rs/CSKS/ROW/TELFX/text()}</column>\n<column name='cDRNAM'>{ $rs/CSKS/ROW/DRNAM/text() }</column>\n<column name='cDATLT'>{ $rs/CSKS/ROW/DATLT/text() }</column>\n\n<column name='cUSNAM'>{ $rs/CSKS/ROW/USNAM/text() }</column>\n<column name='cERSDA'>{ $rs/CSKS/ROW/ERSDA/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "KS03 - Display Cost Center",
  "compositionName" : "Set 1"
}