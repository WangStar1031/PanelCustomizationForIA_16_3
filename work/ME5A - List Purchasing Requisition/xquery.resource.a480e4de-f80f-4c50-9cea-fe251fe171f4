{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "bf66778a-2070-4276-b6ce-9567a8ceed6c",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sWERKS external;\ndeclare variable $sMATNR external;\ndeclare variable $sBADAT external;\ndeclare variable $sBSART external;\ndeclare variable $sLOEKZ external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: SAP date format are ISO/YYYYMMDD, so we remove the dash from the date field :)\nlet $sBADAT := substring(replace($sBADAT,\"-\",\"\"),1,8) \n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sMATNR, concat(\"contains($eban/MATNR, &apos;\", $sMATNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sWERKS, concat(\"contains($eban/WERKS, &apos;\", $sWERKS, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBSART, concat(\"contains($eban/BSART, &apos;\", $sBSART, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBADAT, concat(\"contains($eban/BADAT, &apos;\", $sBADAT, \"&apos;)\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n\n(: Search the data within the Table with a join on Document Number [EBELN] :)\n\nlet $query-str := concat(\"for $eban in /SAP/EBAN/ROW[contains('B',BSTYP)]  \", $whereClause, \" return <RESULT><EBAN>{ $eban }</EBAN></RESULT>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n\tfor $rs in $main-query\n    let $BANFN := sias:trimzero($rs/EBAN/ROW/BANFN/text())\n    let $BNFPO := sias:trimzero($rs/EBAN/ROW/BNFPO/text())\n    let $MATNR := sias:trimzero($rs/EBAN/ROW/MATNR/text())\n    let $LFDAT := sias:showdate($rs/EBAN/ROW/LFDAT/text())\n    let $FRGDT := sias:showdate($rs/EBAN/ROW/FRGDT/text())\n    \nreturn\n<row id='{string($rs/EBAN/ROW/@table:id)}'>\n<column name='cBANFN'>{ $BANFN }</column>       \n<column name='cBNFPO'>{ $BNFPO }</column>\n<column name='cMATNR'>{ $MATNR }</column>\n<column name='cTXZ01'>{ $rs/EBAN/ROW/TXZ01/text() }</column> \n<column name='cEKGRP'>{ $rs/EBAN/ROW/EKGRP/text() }</column> \n<column name='cMATKL'>{ $rs/EBAN/ROW/MATKL/text() }</column>\n<column name='cQuantity'>{ $rs/EBAN/ROW/MENGE/text() } { ' ' } { $rs/EBAN/ROW/MEINS/text() }</column>\n<column name='cLFDAT'>{ $LFDAT }</column> \n<column name='cAFNAM'>{ $rs/EBAN/ROW/AFNAM/text() }</column>\n<column name='cWERKS'>{ $rs/EBAN/ROW/WERKS/text() }</column>\n<column name='cLGORT'>{ $rs/EBAN/ROW/LGORT/text() }</column>\n<column name='cSTATU'>{ $rs/EBAN/ROW/STATU/text() }</column>\n<column name='cESTKZ'>{ $rs/EBAN/ROW/ESTKZ/text() }</column>\n<column name='cFRGKZ'>{ $rs/EBAN/ROW/FRGKZ/text() }</column>\n<column name='cBSART'>{ $rs/EBAN/ROW/BSART/text() }</column>\n<column name='cPSTYP'>{ $rs/EBAN/ROW/PSTYP/text() }</column>\n<column name='cKNTTP'>{ $rs/EBAN/ROW/KNTTP/text() }</column>\n<column name='cFRGDT'>{ $FRGDT }</column>\n<column name='cBEDNR'>{ $rs/EBAN/ROW/BEDNR/text() }</column>\n<column name='cRESWK'>{ $rs/EBAN/ROW/RESWK/text() }</column>\n<column name='cDISPO'>{ $rs/EBAN/ROW/DISPO/text() }</column>\n</row>     \n\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "ME5A - List Purchasing Requisition",
  "compositionName" : "ME5A"
}