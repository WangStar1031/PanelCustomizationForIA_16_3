{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "b85de6f4-4b82-4615-8684-1e8228d2ddb2",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sMATNR external;\ndeclare variable $sWERKS external;\ndeclare variable $sBWART external;\ndeclare variable $sBUDAT external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\nlet $frDate := substring(replace($sBUDAT/from,'-',''),1,8)\nlet $toDate := substring(replace($sBUDAT/to,'-',''),1,8)\n\n(: Build a conditional Where clause :)\n\nlet $whereClause := local:addClause(\"\", $sMATNR, concat(\"contains($mseg/MATNR, &apos;\", $sMATNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sWERKS, concat(\"$mseg/WERKS = &apos;\", $sWERKS, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sBWART, concat(\"$mseg/BWART = &apos;\", $sBWART, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $frDate, concat(\"$mkpf/BUDAT >= &apos;\", $frDate, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $toDate, concat(\"$mkpf/BUDAT <= &apos;\", $toDate, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n(: Search the data within the Table with a join on Info Record [INFNR] :)\n(: Select * from BKPF where BELNR = \"\" and BUKRS = \"\" and GJAHR = \"\" :)\n\nlet $query-str := concat(\"for $mkpf in /SAP/MKPF/ROW , $mseg in /SAP/MSEG/ROW[MBLNR = $mkpf/MBLNR and MJAHR=$mkpf/MJAHR], $makt in /SAP/MAKT/ROW[MATNR = $mseg/MATNR and SPRAS='EN'] \" , $whereClause, \" return<RS><MKPF>{ $mkpf }</MKPF><MSEG>{ $mseg }</MSEG><MAKT>{ $makt }</MAKT></RS>\")\n\nlet $main-query := xhive:evaluate($query-str) \n\nlet $rows := \n               for $rs in $main-query\n               \n               let $NAME1 := sias:get_t001w($rs/MSEG/ROW/WERKS/text()) \n               let $BUDAT := sias:showdate($rs/MKPF/ROW/BUDAT/text())\n               let $ERFME := sias:get_t006a($rs/MSEG/ROW/ERFME/text())\n               let $ERFMG := sias:shownumber($rs/MSEG/ROW/ERFMG/text(), $rs/MSEG/ROW/SHKZG/text())\nreturn\n<row id='{string($rs/MKPF/ROW/@table:id)}'>\n<column name='cLGORT'>{ $rs/MSEG/ROW/LGORT/text() }</column>\n<column name='cBWART'>{ $rs/MSEG/ROW/BWART/text() }</column>\n<column name='cNAME1'>{ $NAME1 }</column>\n<column name='cSOBKZ'>{ $rs/MSEG/ROW/SOBKZ/text() }</column>\n<column name='cMBLNR'>{ $rs/MKPF/ROW/MBLNR/text() }</column>\n<column name='cZEILE'>{ $rs/MSEG/ROW/ZEILE/text() }</column>\n<column name='cBUDAT'>{ $BUDAT }</column>\n<column name='cERFMG'>{ $ERFMG } { ' ' } { $ERFME }</column>\n<column name='cERFME'>{ $rs/MSEG/ROW/ERFME/text() }</column>\n<column name='cMATNR'>{ $rs/MSEG/ROW/MATNR/text() }</column>\n<column name='cMAKTX'>{ $rs/MAKT/ROW/MAKTX/text() }</column>\n<column name='cWERKS'>{ $rs/MSEG/ROW/WERKS/text() }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "MB51-Material Document List",
  "compositionName" : "MB51"
}