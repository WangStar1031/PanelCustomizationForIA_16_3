{
  "createdBy" : null,
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "cd2db9e8-34a6-4f3f-ab0d-7b2bcc36a13c",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\ndeclare variable $sQMNUM external;\ndeclare variable $sQMNUM2 external;\ndeclare variable $sQMDAT external;\n\n\ndeclare function local:getResultsPage($rows, $page, $size) \n{\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> \n  {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:getjest($objnr)\n{\nfor $jest in /SAP/JEST/ROW[OBJNR=$objnr]\nlet $stat := string-join($jest/STAT,', ')\nreturn $stat\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n\nlet $frDate := replace($sQMDAT/from,'-','')\nlet $toDate := replace($sQMDAT/to,'-','')\n     \nlet $whereClause := local:addClause('', $sQMNUM, concat(\"$qmel/QMNUM >=  &apos;\", $sQMNUM, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sQMNUM2, concat(\"$qmel/QMNUM <= &apos;\", $sQMNUM2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $frDate, concat(\"$qmel/QMDAT >= &apos;\", $frDate, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $toDate, concat(\"$qmel/QMDAT <= &apos;\", $toDate, \"&apos;\")) \n\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $qmel in /SAP/QMEL/ROW \", $whereClause, \" return <RS><QMEL>{ $qmel }</QMEL></RS>\")\n \nlet $main-query := xhive:evaluate($query-str) \n\nlet $rows := \n               for $rs in $main-query\n    \t\t   let $PRIOKX := sias:get_t356_t($rs/QMEL/ROW/ARTPR/text(),$rs/QMEL/ROW/PRIOK/text())\n               let $QMDAT := sias:showdate($rs/QMEL/ROW/QMDAT/text())\n               let $STRMN := sias:showdate($rs/QMEL/ROW/STRMN/text())\n               let $LTRMN := sias:showdate($rs/QMEL/ROW/LTRMN/text())\n     \t\t   let $STAT := local:getjest($rs/QMEL/ROW/OBJNR/text())\n               let $QMNUM := sias:trimzero($rs/QMEL/ROW/QMNUM/text())\n               let $KUNUM := sias:trimzero($rs/QMEL/ROW/KUNUM/text())\n               let $LIFNUM := sias:trimzero($rs/QMEL/ROW/LIFNUM/text())\n               \nreturn\n<row id='{string($rs/QMEL/ROW/@table:id)}'>\n<column name='cQMNUM'>{ $QMNUM }</column>\n<column name='cQMDAT'>{ $QMDAT }</column>\n<column name='cSTRMN'>{ $STRMN } { ' to ' } { $LTRMN }</column>\n<column name='cSTAT'>{ $STAT }</column>\n<column name='cPRIOKX'>{ $PRIOKX }</column>\n<column name='cQMTXT'>{ $rs/QMEL/ROW/QMTXT/text() }</column>\n<column name='cMATNR'>{ $rs/QMEL/ROW/MATNR/text() }</column>\n<column name='cKUNUM'>{ $KUNUM }</column>\n<column name='cLIFNUM'>{ $LIFNUM }</column>\n<column name='cHERSTELLER'>{ $rs/QMEL/ROW/HERSTELLER/text() }</column>\n<column name='cBUNAME'>{ $rs/QMEL/ROW/BUNAME/text() }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "QM11 - List of notification",
  "compositionName" : "QM11- Notification Display"
}