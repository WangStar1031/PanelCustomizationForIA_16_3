{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "e479655e-91d1-4737-bd2d-c6023770f283",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKOKRS external;\ndeclare variable $sKOSTL external;\ndeclare variable $sKOSTL2 external;\ndeclare variable $sKSTAR external;\ndeclare variable $sKSTAR2 external;\ndeclare variable $sBUDAT external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n(:declare function local:getCOEP($kokrs,$objnr,$kstar,$kstar2)\n{\n\tfor $coep in /SAP/COEP/ROW[KOKRS = $kokrs and OBJNR = $objnr and KSTAR ge $kstar and KSTAR le $kstar2]\n    return <RS><COEP>{$coep}</COEP></RS>\n};:)\ndeclare function local:get_COBK($kokrs,$belnr,$frDate,$toDate)\n{\n\n\tfor $cobk in /SAP/COBK/ROW\n    where $cobk/KOKRS = $kokrs and $cobk/BELNR = $belnr and $cobk/BUDAT ge $frDate and $cobk/BUDAT le $toDate\n\treturn <RS><COBK>{ $cobk }</COBK></RS>\n};\n(:declare function local:getCSKU($ktopl,$kstar)\n{\n\tfor $csku in /SAP/CSKU/ROW[SPRAS = 'EN' and KTOPL = $ktopl and KSTAR = $kstar]\n    return $csku/KTXT/text()\n};:)\ndeclare function local:getCSKT($kokrs,$kostl,$datbi)\n{\n\tfor $cskt in /SAP/CSKT/ROW[KOKRS = $kokrs and KOSTL = $kostl and DATBI = $datbi]\n    return $cskt/KTEXT/text()\n};\n\n(: Build a conditional Where clause :)\nlet $frDate := substring(replace($sBUDAT/from,'-',''),1,8)\nlet $toDate := substring(replace($sBUDAT/to,'-',''),1,8)\nlet $whereClause := local:addClause(\"\", $sKOKRS, concat(\"contains($csks/KOKRS, &apos;\", $sKOKRS, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sKOSTL, concat(\"$csks/KOSTL >= &apos;\", $sKOSTL, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sKOSTL2, concat(\"$csks/KOSTL <= &apos;\", $sKOSTL2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sKSTAR, concat(\"$coep/KSTAR >= &apos;\", $sKSTAR, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sKSTAR2, concat(\"$coep/KSTAR <= &apos;\", $sKSTAR2, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $csks in /SAP/CSKS/ROW,$coep in /SAP/COEP/ROW[OBJNR = $csks/OBJNR]  \", $whereClause, \" return <RS><CSKS>{ $csks }</CSKS><COEP>{$coep}</COEP></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $KTOPL := sias:get_tka01($rs/COEP/ROW/KOKRS/text(),\"KTOPL\")\n    \n    (:let $coep := local:getCOEP($rs/CSKS/ROW/KOKRS/text(),$rs/CSKS/ROW/OBJNR/text(),$sKSTAR,$sKSTAR2):)\n    let $cobk := local:get_COBK($rs/CSKS/ROW/KOKRS/text(),$rs/COEP/ROW/BELNR/text(),$frDate,$toDate)\n    (:let $csku := local:getCSKU($KTOPL,$rs/COEP/ROW/KSTAR/text()):)\n    let $cskt := local:getCSKT($rs/CSKS/ROW/KOKRS/text(),$rs/CSKS/ROW/KOSTL/text(),$rs/CSKS/ROW/DATBI/text())\n    let $csku := sias:get_csku($KTOPL, $rs/COEP/ROW/KSTAR/text())\n    let $BLDAT := sias:showdate($cobk/COBK/ROW/BLDAT/text())\n    let $BUDAT := sias:showdate($cobk/COBK/ROW/BUDAT/text())\n    \n    return\n\n<row id='{string($rs/CSKS/ROW/@table:id)}'>\n<column name='cBUDAT'>{ $BUDAT }</column>\n<column name='cBELNR'>{ $rs/COEP/ROW/BELNR/text() }</column>\n<column name='cKSTAR'>{ $rs/COEP/ROW/KSTAR/text() }</column>\n<column name='cKTXT'>{ $csku }</column>\n<column name='cBLART'>{ $cobk/COBK/ROW/BLART/text() }</column>\n<column name='cWKGBTR'>{ $rs/COEP/ROW/WKGBTR/text() }</column>\n<column name='cGKOAR'>{ $rs/COEP/ROW/GKOAR/text() }</column>\n<column name='cGKONT'>{ $rs/COEP/ROW/GKONT/text() }</column>\n<column name='cGJAHR'>{ $rs/COEP/ROW/GJAHR/text() }</column>\n<column name='cKOSTL'>{ $rs/CSKS/ROW/KOSTL/text() }</column>\n<column name='cBLDAT'>{ $BLDAT }</column>\n<column name='cWERKS'>{ $rs/COEP/ROW/WERKS/text() }</column>\n<column name='cKTEXT'>{ $cskt }</column>\n<column name='cPERIO'>{ $rs/COEP/ROW/PERIO/text() }</column>\n<column name='cBUKRS'>{ $rs/COEP/ROW/BUKRS/text() }</column>\n<column name='cTWAER'>{ $rs/COEP/ROW/TWAER/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "KSB1 - Display Actual Cost Line Items for Cost Centers",
  "compositionName" : "Set 1"
}