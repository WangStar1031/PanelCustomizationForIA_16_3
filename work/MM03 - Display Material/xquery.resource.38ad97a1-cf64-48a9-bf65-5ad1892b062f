{
  "createdBy" : "sue@iacustomer.com",
  "createdDate" : null,
  "lastModifiedBy" : "sue@iacustomer.com",
  "lastModifiedDate" : null,
  "name" : "9cc31096-5c4c-4fdb-a13b-9a73a0b810e7",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\n\ndeclare variable $page external;\ndeclare variable $size external;\n\ndeclare variable $sMATNR external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> \n  {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\ndeclare function local:get_tstl($aland)\n{\nfor $tstl in /SAP/TSTL/ROW where $tstl/TALND = $aland\nreturn <ROW><TSTL>{ $tstl }</TSTL></ROW>\n};\n\ndeclare function local:get_tskm($tatyp,$taxkm)\n{\nfor $tskm in /SAP/TSKM/ROW where $tskm/TATYP = $tatyp  and $tskm/TAXKM = $taxkm\nreturn <ROW><TSKM>{ $tskm }</TSKM></ROW>\n};\n\ndeclare function local:get_tskmt($tatyp,$taxkm)\n{\nfor $tskmt in /SAP/TSKMT/ROW where $tskmt/SPRAS = 'EN' and $tskmt/TATYP = $tatyp and $tskmt/TAXKM = $taxkm\nreturn $tskmt/VTEXT/text()\n};\n\ndeclare function local:get_taxm($lfdnr,$rs)\n{\nswitch ($lfdnr)\ncase \"1\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM1/text())) then ($rs/MLAN/ROW/TAXM1/text()) else (0) return $taxm \ncase \"2\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM2/text())) then ($rs/MLAN/ROW/TAXM2/text()) else (0) return $taxm \ncase \"3\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM3/text())) then ($rs/MLAN/ROW/TAXM3/text()) else (0) return $taxm\ncase \"4\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM4/text())) then ($rs/MLAN/ROW/TAXM4/text()) else (0) return $taxm\ncase \"5\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM5/text())) then ($rs/MLAN/ROW/TAXM5/text()) else (0) return $taxm\ncase \"6\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM6/text())) then ($rs/MLAN/ROW/TAXM6/text()) else (0) return $taxm\ncase \"7\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM7/text())) then ($rs/MLAN/ROW/TAXM7/text()) else (0) return $taxm\ncase \"8\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM8/text())) then ($rs/MLAN/ROW/TAXM8/text()) else (0) return $taxm\ncase \"9\" return let $taxm := if(exists($rs/MLAN/ROW/TAXM9/text())) then ($rs/MLAN/ROW/TAXM9/text()) else (0) return $taxm\ndefault return \"0\"\n};\nlet $whereClause := local:addClause(\"\", $sMATNR, concat(\"$mlan/MATNR = &apos;\", $sMATNR, \"&apos;\" ))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $mlan in /SAP/MLAN/ROW,$tstl in /SAP/TSTL/ROW[TALND = $mlan/ALAND] \", $whereClause, \" return <RS><MLAN>{ $mlan }</MLAN><TSTL>{ $tstl }</TSTL></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n               let $LANDX := sias:get_t005t($rs/MLAN/ROW/ALAND/text(), \"LANDX\")\n               (:let $tstl := local:get_tstl($rs/MLAN/ROW/ALAND/text()):)\n               let $t685t := sias:get_t685t(\"A\", \"V\", $rs/TSTL/ROW/TATYP/text())\n               let $taxm := local:get_taxm($rs/TSTL/ROW/LFDNR/text(),$rs)\n               let $tskm := local:get_tskm($rs/TSTL/ROW/TATYP/text(),$taxm)\n               let $tskmt := local:get_tskmt($rs/TSTL/ROW/TATYP/text(),$taxm)\n               \n    \nreturn\n<row id='{string($rs/MLAN/ROW/@table:id)}'> \n<column name='cCHECK'>{ $taxm }</column>\n\n<column name='cALAND'>{$rs/MLAN/ROW/ALAND/text() }</column>\n<column name='cLANDX'>{ $LANDX }</column>\n<column name='cTATYP'>{ $rs/TSTL/ROW/TATYP/text() }</column>\n<column name='cT685T'>{ $t685t }</column>\n<column name='cTSKM'>{ $tskm/TSKM/ROW/TAXKM/text() }</column>\n<column name='cTSKMT'>{ $tskmt }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "MM03 - Tax data",
  "compositionName" : "Set 1"
}