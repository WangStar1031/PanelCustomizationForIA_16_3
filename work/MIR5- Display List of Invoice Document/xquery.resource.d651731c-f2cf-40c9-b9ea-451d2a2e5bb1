{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "8637fcc2-f345-4b9d-809c-6a1bd5be1a3d",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sBELNR external;\ndeclare variable $sGJAHR external;\ndeclare variable $sLIFNR external;\ndeclare variable $sBUKRS external;\ndeclare variable $sBLDAT external;\ndeclare variable $sBUDAT external;\ndeclare variable $sBLART external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\n\nlet $sBUDAT := replace($sBUDAT,'-','')\nlet $sBLDAT := replace($sBLDAT,'-','')\n\nlet $whereClause := local:addClause(\"\", $sBELNR, concat(\"contains($rbkp/BELNR, &apos;\", $sBELNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sGJAHR, concat(\"contains($rbkp/GJAHR, &apos;\", $sGJAHR, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sLIFNR, concat(\"contains($rbkp/LIFNR, &apos;\", $sLIFNR, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"contains($rbkp/BUKRS, &apos;\", $sBUKRS, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBLDAT, concat(\"contains($rbkp/BLDAT, &apos;\", $sBLDAT, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBUDAT, concat(\"contains($rbkp/BUDAT, &apos;\", $sBUDAT, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $sBLART, concat(\"contains($rbkp/BLART, &apos;\", $sBLART, \"&apos;)\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n(: Search the data within the Table with a join on Info Record [INFNR] :)\n(: Select * from BKPF where BELNR = \"\" and BUKRS = \"\" and GJAHR = \"\" :)\n\nlet $query-str := concat(\"for $rbkp in /SAP/RBKP/ROW \", $whereClause, \" return <RS><RBKP>{ $rbkp }</RBKP></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows :=\n               for $rs in $main-query \nlet $BLDAT := sias:showdate($rs/RBKP/ROW/BLDAT/text())\nlet $BUDAT := sias:showdate($rs/RBKP/ROW/BUDAT/text())\nlet $ZFBDT := sias:showdate($rs/RBKP/ROW/ZFBDT/text())\nlet $CPUDT := sias:showdate($rs/RBKP/ROW/CPUDT/text())\nlet $LIFNR := sias:trimzero($rs/RBKP/ROW/LIFNR/text())\n               \nreturn\n<row id='{string($rs/RBKP/ROW/@table:id)}'>\n<column name='cBELNR'>{ $rs/RBKP/ROW/BELNR/text() }</column>\n<column name='cGJAHR'>{ $rs/RBKP/ROW/GJAHR/text() }</column>\n<column name='cBLART'>{ $rs/RBKP/ROW/BLART/text() }</column>\n<column name='cBLDAT'>{$BLDAT}</column>\n<column name='cBUDAT'>{$BUDAT}</column>\n<column name='cUSNAM'>{ $rs/RBKP/ROW/USNAM/text() }</column>\n<column name='cTCODE'>{ $rs/RBKP/ROW/TCODE/text() }</column>\n<column name='cVGART'>{ $rs/RBKP/ROW/VGART/text() }</column>\n<column name='cCPUDT'>{$CPUDT}</column>\n<column name='cCPUTM'>{ $rs/RBKP/ROW/CPUTM/text() }</column>\n<column name='cXBLNR'>{ $rs/RBKP/ROW/XBLNR/text() }</column>\n<column name='cBUKRS'>{ $rs/RBKP/ROW/BUKRS/text() }</column>\n<column name='cLIFNR'>{ $LIFNR }</column>\n<column name='cWAERS'>{ $rs/RBKP/ROW/WAERS/text() }</column>\n<column name='cKURSF'>{ $rs/RBKP/ROW/KURSF/text() }</column>\n<column name='cRMWWR'>{ $rs/RBKP/ROW/RMWWR/text() }</column>\n<column name='cBEZNK'>{ $rs/RBKP/ROW/BEZNK/text() }</column>\n<column name='cWMWST1'>{ $rs/RBKP/ROW/WMWST1/text() }</column>\n<column name='cMWSKZ1'>{ $rs/RBKP/ROW/MWSKZ1/text() }</column>\n<column name='cZTERM'>{ $rs/RBKP/ROW/ZTERM/text() }</column>\n<column name='cZBD1T'>{ $rs/RBKP/ROW/ZBD1T/text() }</column>\n<column name='cZBD1P'>{ $rs/RBKP/ROW/ZBD1P/text() }</column>\n<column name='cZBD2T'>{ $rs/RBKP/ROW/ZBD2T/text() }</column>\n<column name='cZBD2P'>{ $rs/RBKP/ROW/ZBD2P/text() }</column>\n<column name='cZBD3T'>{ $rs/RBKP/ROW/ZBD3T/text() }</column>\n<column name='cWSKTO'>{ $rs/RBKP/ROW/WSKTO/text() }</column>\n<column name='cXRECH'>{ $rs/RBKP/ROW/XRECH/text() }</column>\n<column name='cBKTXT'>{ $rs/RBKP/ROW/BKTXT/text() }</column>\n<column name='cSAPRL'>{ $rs/RBKP/ROW/SAPRL/text() }</column>\n<column name='cLOGSYS'>{ $rs/RBKP/ROW/LOGSYS/text() }</column>\n<column name='cXMWST'>{ $rs/RBKP/ROW/XMWST/text() }</column>\n<column name='cSTBLG'>{ $rs/RBKP/ROW/STBLG/text() }</column>\n<column name='cSTJAH'>{ $rs/RBKP/ROW/STJAH/text() }</column>\n<column name='cMWSKZ_BNK'>{ $rs/RBKP/ROW/MWSKZ_BNK/text() }</column>\n<column name='cTXJCD_BNK'>{ $rs/RBKP/ROW/TXJCD_BNK/text() }</column>\n<column name='cIVTYP'>{ $rs/RBKP/ROW/IVTYP/text() }</column>\n<column name='cXRBTX'>{ $rs/RBKP/ROW/XRBTX/text() }</column>\n<column name='cRBSTAT'>{ $rs/RBKP/ROW/RBSTAT/text() }</column>\n<column name='cJ_1BNFTYPE'>{ $rs/RBKP/ROW/J_1BNFTYPE/text() }</column>\n<column name='cBRNCH'>{ $rs/RBKP/ROW/BRNCH/text() }</column>\n<column name='cERFPR'>{ $rs/RBKP/ROW/ERFPR/text() }</column>\n<column name='cSECCO'>{ $rs/RBKP/ROW/SECCO/text() }</column>\n<column name='cERNAME'>{ $rs/RBKP/ROW/ERNAME/text() }</column>\n<column name='cREINDAT'>{ $rs/RBKP/ROW/REINDAT/text() }</column>\n<column name='cUZAWE'>{ $rs/RBKP/ROW/UZAWE/text() }</column>\n<column name='cFDLEV'>{ $rs/RBKP/ROW/FDLEV/text() }</column>\n<column name='cFDTAG'>{ $rs/RBKP/ROW/FDTAG/text() }</column>\n<column name='cZBFIX'>{ $rs/RBKP/ROW/ZBFIX/text() }</column>\n<column name='cFRGKZ'>{ $rs/RBKP/ROW/FRGKZ/text() }</column>\n<column name='cERFNAM'>{ $rs/RBKP/ROW/ERFNAM/text() }</column>\n<column name='cBUPLA'>{ $rs/RBKP/ROW/BUPLA/text() }</column>\n<column name='cFILKD'>{ $rs/RBKP/ROW/FILKD/text() }</column>\n<column name='cGSBER'>{ $rs/RBKP/ROW/GSBER/text() }</column>\n<column name='cLOTKZ'>{ $rs/RBKP/ROW/LOTKZ/text() }</column>\n<column name='cSGTXT'>{ $rs/RBKP/ROW/SGTXT/text() }</column>\n<column name='cESRNR'>{ $rs/RBKP/ROW/ESRNR/text() }</column>\n<column name='cESRPZ'>{ $rs/RBKP/ROW/ESRPZ/text() }</column>\n<column name='cESRRE'>{ $rs/RBKP/ROW/ESRRE/text() }</column>\n<column name='cQSSHB'>{ $rs/RBKP/ROW/QSSHB/text() }</column>\n<column name='cQSFBT'>{ $rs/RBKP/ROW/QSFBT/text() }</column>\n<column name='cQSSKZ'>{ $rs/RBKP/ROW/QSSKZ/text() }</column>\n<column name='cDIEKZ'>{ $rs/RBKP/ROW/DIEKZ/text() }</column>\n<column name='cLANDL'>{ $rs/RBKP/ROW/LANDL/text() }</column>\n<column name='cLZBKZ'>{ $rs/RBKP/ROW/LZBKZ/text() }</column>\n<column name='cTXKRS'>{ $rs/RBKP/ROW/TXKRS/text() }</column>\n<column name='cEMPFB'>{ $rs/RBKP/ROW/EMPFB/text() }</column>\n<column name='cBVTYP'>{ $rs/RBKP/ROW/BVTYP/text() }</column>\n<column name='cHBKID'>{ $rs/RBKP/ROW/HBKID/text() }</column>\n<column name='cZUONR'>{ $rs/RBKP/ROW/ZUONR/text() }</column>\n<column name='cZLSPR'>{ $rs/RBKP/ROW/ZLSPR/text() }</column>\n<column name='cZLSCH'>{ $rs/RBKP/ROW/ZLSCH/text() }</column>\n<column name='cZFBDT'>{$ZFBDT}</column>\n<column name='cKIDNO'>{ $rs/RBKP/ROW/KIDNO/text() }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "MIR5- Display List of Invoice Document",
  "compositionName" : "MIR5"
}