{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "1156d7ac-1964-404e-af9d-ce71d52c3571",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sBANFN external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sBANFN, concat(\"contains($eban/BANFN, &apos;\", $sBANFN, \"&apos;)\" ))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n \n(: Search the data within the Table with a join on Info Record [BANFN] :) \n(: Select * from EBAN join EBKN where EBAN.BANFN = EBKN.BANFN :)\n\nlet $query-str := concat(\"for $eban in /SAP/EBAN/ROW ,$ebkn in /SAP/EBKN/ROW[BANFN = $eban/BANFN] \", $whereClause, \"  return <RS><EBKN>{ $ebkn }</EBKN></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n\tfor $rs in $main-query \n    \n    let $EEIND := sias:showdate($rs/EBAN/ROW/EEIND/text())\n    let $MEINS := sias:get_t006a($rs/EBAN/ROW/MEINS/text())\n    let $FRGKZ_name := sias:get_t161u($rs/EBAN/ROW/FRGKZ/text())\n    let $BADAT := sias:showdate($rs/EBAN/ROW/BADAT/text())\n    let $BEDAT := sias:showdate($rs/EBAN/ROW/BEDAT/text())\n    let $FRGDT := sias:showdate($rs/EBAN/ROW/FRGDT/text())\n    let $GSWRT := sias:currency($rs/EBAN/ROW/GSWRT/text(), \"\")\n    let $SAKTO := sias:trimzero($rs/EBKN/ROW/SAKTO/text())\n    \nreturn\n<row id='{string($rs/EBKN/ROW/@table:id)}'>\n<column name='cBANFN'>{ $rs/EBKN/ROW/BANFN/text() }</column>\n<column name='cZEBKN'>{ $rs/EBKN/ROW/ZEBKN/text() }</column>\n<column name='cMENGE'>{ $rs/EBKN/ROW/MENGE/text() }</column>\n<column name='cSAKTO'>{ $SAKTO }</column>\n<column name='cGSBER'>{ $rs/EBKN/ROW/GSBER/text() }</column>\n<column name='cAUFNR'>{ $rs/EBKN/ROW/AUFNR/text() }</column>\n<column name='cANLN1'>{ $rs/EBKN/ROW/ANLN1/text() }</column>\n<column name='cANLN2'>{ $rs/EBKN/ROW/ANLN2/text() }</column>\n<column name='cPS_PSP_PNR'>{ $rs/EBKN/ROW/PS_PSP_PNR/text() }</column>\n<column name='cKBLNR'>{ $rs/EBKN/ROW/KBLNR/text() }</column>\n<column name='cKBLPOS'>{ $rs/EBKN/ROW/KBLPOS/text() }</column>\n<column name='cABLAD'>{ $rs/EBKN/ROW/ABLAD/text() }</column>\n<column name='cWEMPF'>{ $rs/EBKN/ROW/WEMPF/text() }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "ME53 - Purchase Requisition: Account Assignment",
  "compositionName" : "ME53i"
}