{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "28caaa13-0d56-4807-b2ff-dedeca500866",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias = \"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sEBELN external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\n\nlet $whereClause := local:addClause(\"\", $sEBELN, concat(\"contains($ekko/EBELN, &apos;\", $sEBELN, \"&apos;)\" ))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n(: Search the data within the Table with a join on Info Record [INFNR] :)\n(: Select * from BKPF where BELNR = \"\" and BUKRS = \"\" and GJAHR = \"\" :)\n\nlet $query-str := concat(\"for $ekko in /SAP/EKKO/ROW[BSTYP = 'K'] , $ekpo in /SAP/EKPO/ROW[EBELN = $ekko/EBELN and BUKRS = $ekko/BUKRS] \", $whereClause, \" return <RS><EKPO>{ $ekpo }</EKPO><EKKO>{ $ekko }</EKKO></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n               \nlet $BEDAT := sias:showdate($rs/EKKO/ROW/BEDAT/text())               \nlet $KDATB := sias:showdate($rs/EKKO/ROW/KDATB/text())       \nlet $KDATE := sias:showdate($rs/EKKO/ROW/KDATE/text())\nlet $LIFNR := sias:trimzero($rs/EKKO/ROW/LIFNR/text())\n    \nreturn\n<row id='{string($rs/EKKO/ROW/@table:id)}'>\n<column name='cEBELN'>{ $rs/EKKO/ROW/EBELN/text() }</column>\n<column name='cBUKRS'>{ $rs/EKKO/ROW/BUKRS/text() }</column>\n<column name='cEKGRP'>{ $rs/EKKO/ROW/EKGRP/text() }</column>\n<column name='cBSART'>{ $rs/EKKO/ROW/BSART/text() }</column>\n<column name='cBEDAT'>{ $BEDAT }</column>\n<column name='cEKORG'>{ $rs/EKKO/ROW/EKORG/text() }</column>\n<column name='cLIFNR'>{ $LIFNR }</column>\n<column name='cNAME1'>{ $rs/LFA1/ROW/NAME1/text() }</column>\n\n<column name='cBEDAT2'>{ $BEDAT }</column>\n<column name='cKDATB'>{ $KDATB }</column>\n<column name='cPINCR'>{ $rs/EKKO/ROW/PINCR/text() }</column>\n<column name='cUPINC'>{ $rs/EKKO/ROW/UPINC/text() }</column>\n<column name='cKDATE'>{ $KDATE }</column>\n<column name='cSPRAS'>{ $rs/EKKO/ROW/SPRAS/text() }</column>\n\n<column name='cZTERM'>{ $rs/EKKO/ROW/ZTERM/text() }</column>\n<column name='cKTWRT'>{ $rs/EKKO/ROW/KTWRT/text() }</column>\n<column name='cWAERS'>{ $rs/EKKO/ROW/WAERS/text() }</column>\n<column name='cZBD1T'>{ $rs/EKKO/ROW/ZBD1T/text() } days</column>\n<column name='cZBD1P'>{ $rs/EKKO/ROW/ZBD1P/text() }</column>\n<column name='cWURKS'>{ $rs/EKKO/ROW/WKURS/text() }</column>\n<column name='cKUFIX'>{ $rs/EKKO/ROW/KUFIX/text() }</column>\n<column name='cZBD2T'>{ $rs/EKKO/ROW/ZBD2T/text() } days</column>\n<column name='cZBD2P'>{ $rs/EKKO/ROW/ZBD2P/text() }</column>\n<column name='cINCO1'>{ $rs/EKKO/ROW/INCO1/text() }</column>\n<column name='cINCO2'>{ $rs/EKKO/ROW/INCO2/text() }</column>\n<column name='cZBD3T'>{ $rs/EKKO/ROW/ZBD3T/text() } Days net</column>\n\n<column name='cIHRAN'>{ $rs/EKKO/ROW/IHRAN/text() }</column>\n<column name='cANGNR'>{ $rs/EKKO/ROW/ANGNR/text() }</column>\n<column name='cIHREZ'>{ $rs/EKKO/ROW/IHREZ/text() }</column>\n<column name='cVERKF'>{ $rs/EKKO/ROW/VERKF/text() }</column>\n<column name='cUNSEZ'>{ $rs/EKKO/ROW/UNSEZ/text() }</column>\n<column name='cTELF1'>{ $rs/EKKO/ROW/TELF1/text() }</column>\n<column name='cLLIEF'>{ $rs/EKKO/ROW/LLIEF/text() }</column>\n<column name='cLIFRE'>{ $rs/EKKO/ROW/LIFRE/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "ME33K - Display Contract",
  "compositionName" : "ME33K"
}