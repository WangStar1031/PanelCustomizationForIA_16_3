{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "96308303-951a-4a0e-8006-b93caa025383",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sEBELN external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\n\nlet $whereClause := local:addClause(\"\", $sEBELN, concat(\"contains($ekko/EBELN, &apos;\", $sEBELN, \"&apos;)\" ))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n(: Search the data within the Table with a join on Info Record [INFNR] :)\n(: Select * from BKPF where BELNR = \"\" and BUKRS = \"\" and GJAHR = \"\" :)\n\nlet $query-str := concat(\"for $ekko in /SAP/EKKO/ROW[BSTYP = 'K'] , $ekpo in /SAP/EKPO/ROW[EBELN = $ekko/EBELN ] \", $whereClause, \" return <RS><EKPO>{ $ekpo }</EKPO><EKKO>{ $ekko }</EKKO></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n    \nreturn\n<row id='{string($rs/EKKO/ROW/@table:id)}'>\n<column name='cEBELN'>{ $rs/EKKO/ROW/EBELN/text() }</column>\n<column name='cEBELP'>{ $rs/EKPO/ROW/EBELP/text() }</column>\n<column name='cKNTTP'>{ $rs/EKPO/ROW/KNTTP/text() }</column>\n<column name='cEMATN'>{ $rs/EKPO/ROW/EMATN/text() }</column>\n<column name='cMATKL'>{ $rs/EKPO/ROW/MATKL/text() }</column>\n<column name='cWERKS'>{ $rs/EKPO/ROW/WERKS/text() }</column>\n<column name='cTXZ02'>{ $rs/EKPO/ROW/TXZ01/text() }</column>\n<column name='cLGORT'>{ $rs/EKPO/ROW/LGORT/text() }</column>\n\n<column name='cKTMNG'>{ $rs/EKPO/ROW/KTMNG/text() } { ' ' } { $rs/EKPO/ROW/MEINS/text() }</column>\n<column name='cABMNG'>{ $rs/EKPO/ROW/ABMNG/text() }</column>\n<column name='cNETPR'>{ $rs/EKPO/ROW/NETPR/text() } { ' ' } { $rs/EKPO/ROW/WAERS/text() }</column>\n<column name='cPRDAT'>{ $rs/EKPO/ROW/PRDAT/text() }</column>\n<column name='cBPUMN'>{ $rs/EKPO/ROW/BPUMN/text() } { ' ' } { $rs/EKPO/ROW/MEINS/text() } { ' ' } { $rs/EKPO/ROW/BPRME/text() }</column>\n<column name='cSPINF'>{ $rs/EKPO/ROW/SPINF/text() }</column>\n\n<column name='cMAHN1'>{ $rs/EKPO/ROW/MAHN1/text() }</column>\n<column name='cBSTAE'>{ $rs/EKPO/ROW/BSTAE/text() }</column>\n<column name='cKZABS'>{ $rs/EKPO/ROW/KZABS/text() }</column>\n<column name='cMAHN2'>{ $rs/EKPO/ROW/MAHN2/text() }</column>\n<column name='cLABNR'>{ $rs/EKPO/ROW/LABNR/text() }</column>\n<column name='cMAHN3'>{ $rs/EKPO/ROW/MAHN3/text() }</column>\n<column name='cBEDNR'>{ $rs/EKPO/ROW/BEDNR/text() }</column>\n<column name='cSCHPR'>{ $rs/EKPO/ROW/SCHPR/text() }</column>\n<column name='cIDNLF'>{ $rs/EKPO/ROW/IDNLF/text() }</column>\n<column name='cPRSDR'>{ $rs/EKPO/ROW/PRSDR/text() }</column>\n\n<column name='cUNTTO'>{ $rs/EKPO/ROW/UNTTO/text() }</column>\n<column name='cINSMK'>{ $rs/EKPO/ROW/INSMK/text() }</column>\n<column name='cWEPOS'>{ $rs/EKPO/ROW/WEPOS/text() }</column>\n<column name='cUEBTO'>{ $rs/EKPO/ROW/UEBTO/text() }</column>\n<column name='cUEBTK'>{ $rs/EKPO/ROW/UEBTK/text() }</column>\n<column name='cWEUNB'>{ $rs/EKPO/ROW/WEUNB/text() }</column>\n<column name='cMWSKZ'>{ $rs/EKPO/ROW/MWSKZ/text() }</column>\n<column name='cREPOS'>{ $rs/EKPO/ROW/REPOS/text() }</column>\n<column name='cEVERS'>{ $rs/EKPO/ROW/EVERS/text() }</column>\n\n<column name='cWEBRE'>{ $rs/EKPO/ROW/WEBRE/text() }</column>\n<column name='cIUID_RELEVANT'>{ $rs/EKPO/ROW/IUID_RELEVANT/text() }</column>\n\n\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "ME33K-Display Contract Items",
  "compositionName" : "ME33K"
}