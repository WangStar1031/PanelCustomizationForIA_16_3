{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "ec94cd2b-d4ef-43ce-bb43-61c1063cb320",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sAUFNR external;\n\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\ndeclare function local:getJEST($objnr)\n{\n for $jest in /SAP/JEST/ROW[OBJNR = $objnr and INACT = ' ']\n return <RS><JEST>{$jest}</JEST></RS>\n\n};\ndeclare function local:getJSTO($objnr)\n{\n for $jsto in /SAP/JSTO/ROW[OBJNR = $objnr]\n return <RS><JSTO>{$jsto}</JSTO></RS>\n};\ndeclare function local:getCEPC($prctr, $kokrs)\n{\n\tfor $cepc in /SAP/CEPC/ROW[PRCTR = $prctr and KOKRS = $kokrs]\n    return <RS><CEPC>{$cepc}</CEPC></RS>\n};\ndeclare function local:getCEPCT($prctr, $kokrs, $datbi)\n{\n   for $cepct in /SAP/CEPCT/ROW[PRCTR = $prctr and KOKRS = $kokrs and DATBI = $datbi and SPRAS = 'EN']\n    return <RS><CEPCT>{$cepct}</CEPCT></RS>\n};\ndeclare function local:getUSR21($veraa_user)\n{\n  for $usr21 in /SAP/USR21/ROW[BNAME = $veraa_user]\n  return <RS><USR21>{$usr21}</USR21></RS>\n};\ndeclare function local:getADRP($persnumber)\n{\n  for $adrp in /SAP/ADRP/ROW[PERSNUMBER = $persnumber]\n  return <RS><ADRP>{$adrp}</ADRP></RS>\n};\ndeclare function local:getCSKT($kokrs, $kostv, $date)\n{\n  for $cskt in /SAP/CSKT/ROW[KOKRS = $kokrs and KOSTL = $kostv and SPRAS = 'EN' and DATBI >= $date]\n  return <RS><CSKT>{$cskt}</CSKT></RS>\n};\ndeclare function local:getVBAP($kdauf, $kdpos)\n{\n  for $vbap in /SAP/VBAP/ROW[VBELN = $kdauf and VBELP = $kdpos]\n  return <RS><VBAP>{$vbap}</VBAP></RS>\n};\ndeclare function local:getTKZSLT($zschl)\n{\n  for $tkzslt in /SAP/TKZSLT/ROW[ZSCHL = $zschl and SPRAS = 'EN']\n  return <RS><TKZSLT>{$tkzslt}</TKZSLT></RS>\n};\ndeclare function local:getAUTYP($autyp)\n{\n\tswitch ($autyp)\n    case \"01\" return \" Internal Order(Controlling)\"\n    case \"02\" return \" Accrual Calculation Order(Controlling)\"\n    case \"03\" return \" Model Order(Controlling\"\n    case \"04\" return \" CO Production Order\"\n    case \"05\" return \" Product Cost Collector\" \n    case \"06\" return \" QM Order\"\n    case \"10\" return \" PP Production Order\"\n    case \"20\" return \" Network\"\n    case \"30\" return \" Maintenance Order\"\n    case \"40\" return \" Process Order\" \n    case \"50\" return \" Inspection Lot\"\n    case \"60\" return \" Personnel Order\"\n    case \"70\" return \" Shipping deadlines\"\n     \n    default return \"N/A\"\n}; \ndeclare function local:getStatusNumber($stat,$tj02t, $tj30t)\n{\n\tif ($stat = 'I')\n    then\n    let $result := $tj02t\n    return $result \n    else if ($stat = 'E')\n    then\n    let $result := $tj30t\n    return $result\n    else()\n\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sAUFNR, concat(\"contains($aufk/AUFNR, &apos;\", $sAUFNR, \"&apos;)\" ))\n\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $aufk in /SAP/AUFK/ROW \", $whereClause, \" return <RS><AUFK>{ $aufk }</AUFK></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n   let $stringDate := xs:string(current-date())\n   let $fixDate := replace($stringDate,'-','')\n    \n    let $JEST := local:getJEST($rs/AUFK/ROW/OBJNR/text())\n    let $JSTO := local:getJSTO($rs/AUFK/ROW/OBJNR/text())\n    let $CEPC := local:getCEPC($rs/AUFK/ROW/PRCTR/text(), $rs/AUFK/ROW/KOKRS/text())\n    let $CEPCT := local:getCEPCT($CEPC/CEPC/ROW/PRCTR/text(), $CEPC/CEPC/ROW/KOKRS/text(), $CEPC/CEPC/ROW/DATBI/text())\n    let $USR21 := local:getUSR21($rs/AUFK/ROW/VERAA_USER/text())\n    let $ADRP := local:getADRP($USR21/USR21/ROW/PERSNUMBER/text())\n    let $CSKT := local:getCSKT($rs/AUFK/ROW/KOKRS/text(), $rs/AUFK/ROW/KOSTV/text(), $fixDate)\n    let $VBAP := local:getVBAP($rs/AUFK/ROW/KDAUF/text(), $rs/AUFK/ROW/KDPOS/text())\n    let $TKZSLT := local:getTKZSLT($rs/AUFK/ROW/ZSCHL/text())\n    let $AUTYP := local:getAUTYP($rs/AUFK/ROW/AUTYP/text())\n   \n    \n    let $TXT := sias:get_t003p($rs/AUFK/ROW/AUART/text())\n    let $BUTXT :=  sias:get_t001($rs/AUFK/ROW/BUKRS/text(), \"BUTXT\")\n    let $LAND1 := sias:get_t001($rs/AUFK/ROW/BUKRS/text(), \"LAND1\")\n    let $GTEXT :=  sias:get_tgsbt($rs/AUFK/ROW/GSBER/text())\n    let $NAME1 :=  sias:get_t001w($rs/AUFK/ROW/WERKS/text())\n\tlet $FKBTX := sias:get_tfkbt($rs/AUFK/ROW/FUNC_AREA/text())\n    let $LTEXT :=  sias:get_tcurt($rs/AUFK/ROW/WAERS/text())\n    let $VTEXT := sias:get_t683u($rs/AUFK/ROW/KVEWE/text(), $rs/AUFK/ROW/KAPPL/text(), $rs/AUFK/ROW/KALSM/text())\n    let $BEZEI  := sias:get_tka01($rs/AUFK/ROW/KOKRS/text(),\"BEZEI\")\n    let $TJ30T := sias:get_tj30t($rs/AUFK/ROW/MANDT/text(), $JSTO/JSTO/ROW/STSMA/text(),$JEST/JEST/ROW/STAT/text())\n    let $TJ02T := sias:get_tj02t($JEST/JEST/ROW/STAT/text(), \"TXT04\")\n    let $TEXTA := sias:get_tkkad($rs/AUFK/ROW/MANDT/text(),$rs/AUFK/ROW/ABGSL/text())\n    let $KALSM := sias:get_t005( $LAND1, \"KALSM\")\n    let $TEXT1 := sias:get_ttxjt($rs/AUFK/ROW/MANDT/text(),$KALSM,$rs/AUFK/ROW/TXJCD/text())\n    let $ZTEXT:= sias:get_tpi01t($rs/AUFK/ROW/MANDT/text(),$rs/AUFK/ROW/ZSCHM/text())\n    let $AKTXT := sias:get_tko09($rs/AUFK/ROW/MANDT/text(),$rs/AUFK/ROW/KOKRS/text(),$rs/AUFK/ROW/ABKRS/text())\n    \n    let $STATNUM := local:getStatusNumber($JEST/JEST/ROW/STAT/text(),$TJ02T, $TJ30T)\n   \n    return\n\n<row id='{string($rs/AUKF/ROW/@table:id)}'>\n<column name='cAUFNR'>{ $rs/AUFK/ROW/AUFNR/text() }</column>\n<column name='cAUART'>{$rs/AUFK/ROW/AUART/text() }{' '}{$TXT}</column>\n<column name='cKTEXT'>{ $rs/AUFK/ROW/KTEXT/text()}</column>\n\n<column name='cKOKRS'>{ $rs/AUFK/ROW/KOKRS/text() }{' '}{$BEZEI}</column>\n<column name='cBUKRS'>{ $rs/AUFK/ROW/BUKRS/text() }{' '}{$BUTXT}</column>\n<column name='cGSBER'>{ $rs/AUFK/ROW/GSBER/text() }{' '}{$GTEXT}</column>\n<column name='cWERKS'>{ $rs/AUFK/ROW/WERKS/text() }{' '}{$NAME1}</column>\n<column name='cFUNC_AREA'>{ $rs/AUFK/ROW/FUNC_AREA/text() }{' '}{$FKBTX}</column>\n<column name='cSCOPE'>{ $rs/AUFK/ROW/SCOPE/text() }</column>\n<column name='cPRCTR'>{ $rs/AUFK/ROW/PRCTR/text() }{' '}{$CEPCT/CEPCT/ROW/KTEXT/text()}</column>\n\n<column name='cKOSTV'>{ $rs/AUFK/ROW/KOSTV/text() }{' '}{$CSKT/CSKT/ROW/LTEXT/text()}</column>\n<column name='cVERAA_USER'>{ $rs/AUFK/ROW/VERAA_USER/text()}{' '}{$ADRP/ADRP/ROW/NAME_TEXT/text()}</column>\n<column name='cAKSTL'>{ $rs/AUFK/ROW/AKSTL/text() }{' '}{$CSKT/CSKT/ROW/LTEXT/text()}</column>\n<column name='cABUKR'>{ $rs/AUFK/ROW/ABUKR/text() }{' '}{$BUTXT}</column>\n<column name='cANFAUFNR'>{ $rs/AUFK/ROW/AUFAUFNR/text() }{' '}{ $rs/AUFK/ROW/KTEXT/text()}</column>\n<column name='cKDAUF'>{ $rs/AUFK/ROW/KDAUF/text() }{' '}{$rs/AUFK/ROW/KDPOS/text()}{' '}{$VBAP/VBAP/ROW/ARKTX/text()}</column>\n<column name='cTXJCD'>{ $rs/AUFK/ROW/TXJCD/text() }{' '}{$TEXT1}</column>\n<column name='cAUFEX'>{ $rs/AUFK/ROW/AUFEX/text() }</column>\n\n<column name='cTXT04'>{ $TJ02T }</column>\n<column name='cTXT04_1'>{ $TJ30T}</column>\n<column name='cTXT04_2'>{ $STATNUM }</column>\n<column name='cWAERS'>{ $rs/AUFK/ROW/WAERS/text() }{' '}{$LTEXT}</column>\n<column name='cAUTYP'>{ $rs/AUFK/ROW/AUTYP/text() }{' '}{$AUTYP}</column>\n<column name='cASTKZ'>{$rs/AUFK/ROW/ASTKZ/text() }</column>\n<column name='cCYCLE'>{ $rs/AUFK/ROW/CYCLE/text() }{' '}{$CSKT/CSKT/ROW/KTEXT/text()}</column>\n\n<column name='cABGSL'>{ $rs/AUFK/ROW/ABGSL/text() }{' '}{$TEXTA}</column>\n<column name='cKALSM'>{ $rs/AUFK/ROW/KALSM/text() }{' '}{$VTEXT}</column>\n<column name='cZSCHL'>{ $rs/AUFK/ROW/ZSCHL/text() }{' '}{$TKZSLT/TKZSLT/ROW/ZTEXT/text()}</column>\n<column name='cZSCHM'>{ $rs/AUFK/ROW/ZSCHM/text() }{' '}{$ZTEXT}</column>\n\n<column name='cUSER0'>{ $rs/AUFK/ROW/USER0/text() }</column>\n<column name='cUSER5'>{ $rs/AUFK/ROW/USER5/text() }</column>\n<column name='cUSER1'>{ $rs/AUFK/ROW/USER1/text() }</column>\n<column name='cUSER6'>{ $rs/AUFK/ROW/USER6/text() }</column>\n<column name='cUSER2'>{ $rs/AUFK/ROW/USER2/text() }</column>\n<column name='cUSER7'>{ $rs/AUFK/ROW/USER7/text() }</column>\n<column name='cUSER3'>{$rs/AUFK/ROW/USER3/text()  }</column>\n<column name='cUSER8'>{ $rs/AUFK/ROW/USER8/text() }</column>\n<column name='cUSER4'>{ $rs/AUFK/ROW/USER4/text() }{' '}{$rs/AUFK/ROW/WAERS/text()}</column>\n<column name='cUSER9'>{ $rs/AUFK/ROW/USER9/text() }</column>\n<column name='cABKRS'>{ $rs/AUFK/ROW/ABKRS/text() }{' '}{$AKTXT}</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "KO03 - Display Internal Order",
  "compositionName" : "Set 1"
}