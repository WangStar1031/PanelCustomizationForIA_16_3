{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "3779cdbc-3052-4a30-8848-207af94b83fb",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sMATNR external;\ndeclare variable $sKUNNR external;\ndeclare variable $sFKDAT external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $frDate := substring(replace($sFKDAT/from,'-',''),1,8)\nlet $toDate := substring(replace($sFKDAT/to,'-',''),1,8)\nlet $whereClause := local:addClause(\"\", $sMATNR, concat(\"contains($vrpma/MATNR, &apos;\", $sMATNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sKUNNR, concat(\"contains($vrpma/KUNNR , &apos;\", $sKUNNR, \"&apos;)\"))\nlet $whereClause := local:addClause($whereClause, $frDate, concat(\"$vrpma/FKDAT >= &apos;\", $frDate, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $toDate, concat(\"$vrpma/FKDAT <= &apos;\", $toDate, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $vrpma in /SAP/VRPMA/ROW,$vbrp in /SAP/VBRP/ROW[MATNR = $vrpma/MATNR and VBELN = $vrpma/VBELN], $t001w in /SAP/T001W/ROW[VKORG= $vrpma/VKORG and WERKS = $vbrp/WERKS],$t001k in /SAP/T001K/ROW[BWKEY = $t001w/BWKEY], $t001 in /SAP/T001/ROW[BUKRS = $t001k/BUKRS]\", $whereClause, \"return <RS><VRPMA>{ $vrpma }</VRPMA><VBRP>{ $vbrp }</VBRP><T001>{ $t001 }</T001></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $WAERS := sias:get_t001($rs/T001/ROW/BUKRS/text(),'WAERS')\n    return\n\n<row id='{string($rs/VRPMA/ROW/@table:id)}'>\n<column name='cFKDAT'>{ $rs/VRPMA/ROW/FKDAT/text() }</column>\n<column name='cFKTYP'>{ $rs/VRPMA/ROW/FKTYP/text() }</column>\n<column name='cFKART'>{ $rs/VRPMA/ROW/FKART/text() }</column>\n<column name='cVBELN'>{ $rs/VRPMA/ROW/VBELN/text() }</column>\n<column name='cPOSNR'>{ $rs/VRPMA/ROW/POSNR/text() }</column>\n<column name='cMATNR'>{ $rs/VRPMA/ROW/MATNR/text() }</column>\n<column name='cFKIMG'>{ $rs/VBRP/ROW/FKIMG/text() }</column>\n<column name='cVRKME'>{ $rs/VBRP/ROW/VRKME/text() }</column>\n<column name='cNETWR'>{ $rs/VBRP/ROW/NETWR/text() }</column>\n<column name='cWAERS'>{ $WAERS }</column>\n<column name='cERNAM'>{ $rs/VRPMA/ROW/ERNAM/text() }</column>\n<column name='cKUNDE'>{ $rs/VRPMA/ROW/KUNNR/text() }</column>\n<column name='cVKORG'>{ $rs/VRPMA/ROW/VKORG/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VF05 - List of Billing Documents",
  "compositionName" : "Set 1"
}