{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "51b3f4e3-e697-4d6f-9fb8-048bdba806b6",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\ndeclare variable $sVBELN external;\ndeclare variable $sBUKRS external;\n\ndeclare function local:getResultsPage($rows, $page, $size) \n{\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\ndeclare function local:get_ktgrm($KTGRM)\n{\n\tswitch ($KTGRM)\n    case \"01\" return \"Trading goods\"\n    case \"02\" return \"Services\"\n    case \"03\" return \"Finished goods\"\n    case \"04\" return \"Empties\"\n    case \"30\" return \"Own fees\"\n    case \"31\" return \"external fees\"\n    case \"32\" return \"expenses\"\n    case \"L1\" return \"fees\"\n    case \"L2\" return \"OSIS\"\n    case \"L3\" return \"Disbursements\"\n    case \"L4\" return \"Other\"\n    default return \"On-Account Pmt\"\n    };\n    declare function local:get_vkaus($VKAUS)\n{\n\tswitch ($VKAUS)\n    case \"E\" return \"Serialized parts\"\n    case \"M\" return \"Sample\"\n    case \"RS1\" return \"Parcel\"\n    case \"RS2\" return \"LTL\"\n    case \"S\" return \"Serialized parts\"\n    default return \"\"\n    };\ndeclare function local:get_kondm($KONDM)\n{\n\tswitch ($KONDM)\n    case \"01\" return \"Standard Parts\"\n    case \"02\" return \"Spare Parts\"\n    default return \"\"\n};\ndeclare function local:get_bonus($BONUS)\n{\n\tswitch ($BONUS)\n     case \"01\" return \"Maximum Rebate\"\n     case \"02\" return \"Minor Rebate\"\n     default return \"\"\n};\ndeclare function local:get_provg($PROVG)\n{\n\tswitch ($PROVG)\n     case \"01\" return \"Commision group 1\"\n     case \"02\" return \"Commision group 2\"\n     default return \"\"\n};\ndeclare function local:get_prsfd($PRSFD)\n{\n      if ($PRSFD = \"X\") then \"Pricing Standard\" \n      else if ($PRSFD = \"A\") then \"Pricing for empties\"\n      else if ($PRSFD = \"B\") then \"Pricing for free goods 100% discount\"\n      else \"No pricing\"\n};\ndeclare function local:get_mprok($MPROK)\n{\n      if ($MPROK = \"A\") then \"Manual Price change carried out\" \n      else if ($MPROK = \"B\") then \"Condition manually deleted\"\n      else if ($MPROK = \"C\") then \"Manual Price change realease\"\n      else \"No manual price change\" \n};\ndeclare function local:get_kowrr($KOWRR) \n{\n      if ($KOWRR = \"X\") then \"No cumulation - Values cannot be used statistically\" \n      else if ($KOWRR = \"Y\") then \"No cumulation - Values can be used Statistically\"\n      else \"System will copy item to header total\"\n};\ndeclare function local:get_shkzg($SHKZG)\n{\n      if ($SHKZG = \"A\") then \"Outbound - Document flow negative\" \n      else if ($SHKZG= \"B\") then \"Returns - Document flow negative\"\n      else if ($SHKZG = \"X\") then \"Returns\"\n      else \"Outbound message processing\"\n};\ndeclare function local:get_konda_auft($KONDA_AUFT)\n{\nswitch ($KONDA_AUFT)\n    case \"01\" return \"Bulk buyer\"\n    case \"02\" return \"Occasional buyer\"\n    default return \"New customers\"\n};\ndeclare function local:get_pltyp_auft($PLTYP_AUFT)\n{\nswitch ($PLTYP_AUFT)\n    case \"01\" return \"Wholesale\"\n    case \"02\" return \"Retail\"\n    case \"03\" return \"Industry\"\n    case \"04\" return \"Public Sector\"\n    case \"90\" return \"Internet\"\n    case \"L1\" return \"LGL:Standard Rates\"\n    default return \"LGL:Discounted Rates\"\n    };\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\n\nlet $whereClause := local:addClause(\"\", $sVBELN, concat(\"contains($vbrk/VBELN, &apos;\", $sVBELN, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"contains($vbrk/BUKRS, &apos;\", $sBUKRS, \"&apos;)\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n\nlet $query-str := concat(\"for $vbrk in /SAP/VBRK/ROW, $vbrp in /SAP/VBRP/ROW[VBELN = $vbrk/VBELN] \", $whereClause, \" return <RS><VBRK>{ $vbrk }</VBRK><VBRP>{ $vbrp}</VBRP></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows := \n               for $rs in $main-query\n\n\nlet $ERDAT := sias:showdate($rs/VBRP/ROW/ERDAT/text())\nlet $ERZET := sias:showtime($rs/VBRP/ROW/ERZET/text())\nlet $PRSDT := sias:showdate($rs/VBRP/ROW/PRSDT/text())\nlet $FBUDA := sias:showdate($rs/VBRP/ROW/FBUDA/text())\nlet $ABRBG := sias:showdate($rs/VBRP/ROW/ABRBG/text())\nlet $PRSFD := local:get_prsfd($rs/VBRP/ROW/PRSFD/text())\nlet $MPROK := local:get_mprok($rs/VBRP/ROW/MPROK/text()) \nlet $KOWRR := local:get_kowrr($rs/VBRP/ROW/KOWRR/text())\nlet $SHKZG := local:get_shkzg($rs/VBRP/ROW/SHKZG/text())\nlet $PROVG := local:get_provg($rs/VBRP/ROW/PROVG/text())\nlet $BONUS := local:get_bonus($rs/VBRP/ROW/BONUS/text())\nlet $KONDM := local:get_kondm($rs/VBRP/ROW/KONDM/text())\nlet $KTGRM := local:get_ktgrm($rs/VBRP/ROW/KTGRM/text())\nlet $SPART2 := sias:get_tspat($rs/VBRP/ROW/SPART/text())\nlet $VKORG_AUFT2 := sias:get_tvkot($rs/VBRP/ROW/VKORG_AUFT/text())\nlet $VTWEG_AUFT2 := sias:get_tvtwt($rs/VBRP/ROW/VTWEG_AUFT/text())\nlet $SPARA2 := sias:get_tspat($rs/VBRP/ROW/SPARA/text())\nlet $KONDA_AUFT := local:get_konda_auft($rs/VBRP/ROW/KONDA_AUFT/text())\nlet $PLTYP_AUFT :=local:get_pltyp_auft($rs/VBRP/ROW/PLTYP_AUFT/text())\nlet $VKAUS :=local:get_vkaus($rs/VBRP/ROW/VKAUS/text())\nlet $KDGRP_AUFT := sias:get_t151t($rs/VBRP/ROW/KDGRP_AUFT/text())\nlet $AUGRU_AUFT := sias:get_tvaut($rs/VBRP/ROW/AUGRU_AUFT/text())\nlet $VBELN\t:= sias:trimzero($rs/VBRK/ROW/VBELN/text())\nlet $POSNR\t:= sias:trimzero($rs/VBRP/ROW/POSNR/text())\nlet $FKIMG\t:= sias:shownumber($rs/VBRP/ROW/FKIMG/text(), \"\")\nlet $FKLMG\t:= sias:shownumber($rs/VBRP/ROW/FKLMG/text(), \"\")\nlet $NETWR\t:= sias:currency($rs/VBRP/ROW/NETWR/text(), \"\")\nlet $VRKME\t:= sias:get_t006a($rs/VBRP/ROW/VRKME/text())\nlet $NTGEW\t:= sias:shownumber($rs/VBRP/ROW/NTGEW/text(), \"\")\nlet $BRGEW\t:= sias:shownumber($rs/VBRP/ROW/BRGEW/text(), \"\")\nlet $AUBEL\t:= sias:trimzero($rs/VBRP/ROW/AUBEL/text())\nlet $AUPOS\t:= sias:trimzero($rs/VBRP/ROW/AUPOS/text())\nlet $VGBEL\t:= sias:trimzero($rs/VBRP/ROW/VGBEL/text())\nlet $VGPOS\t:= sias:trimzero($rs/VBRP/ROW/VGPOS/text())\nlet $MEINS\t:= sias:get_t006a($rs/VBRP/ROW/MEINS/text())\nlet $SKFBP\t:= sias:currency($rs/VBRP/ROW/SKFBP/text(), \"\")\n\n\nreturn\n<row id='{string($rs/VBRK/ROW/@table:id)}'>\n<column name='cVBELN'>{ $rs/VBRK/ROW/VBELN/text() }</column>\n<column name='cBUKRS'>{ $rs/VBRK/ROW/BUKRS/text() }</column>\n\n<column name='cFKIMG_list'>{ $FKIMG }</column>\n<column name='cFKIMG'>{ $FKIMG } { ' ' } { $VRKME }</column>\n<column name='cARKTX'>{ $rs/VBRP/ROW/ARKTX/text() }</column>\n<column name='cVRKME'>{ $VRKME }</column>\n<column name='cNETWR'>{ $NETWR }</column>\n<column name='cMWSBP'>{ $rs/VBRP/ROW/MWSBP/text() }</column>\n<column name='cGEWEI'>{ $rs/VBRP/ROW/GEWEI/text() }</column>\n<column name='cVOLEH'>{ $rs/VBRP/ROW/VOLEH/text() }</column>\n<column name='cEANNR'>{ $rs/VBRP/ROW/EANNR/text() }</column>\n<column name='cEAN11'>{ $rs/VBRP/ROW/EAN11/text() }</column>\n<column name='cVSTEL'>{ $rs/VBRP/ROW/VSTEL/text() }</column>\n<column name='cKOKRS'>{ $rs/VBRP/ROW/KOKRS/text() }</column>\n<column name='cBWTAR'>{ $rs/VBRP/ROW/BWTAR/text() }</column>\n<column name='cVBELV'>{ $rs/VBRP/ROW/VBELV/text() }</column>\n<column name='cPOSNV'>{ $rs/VBRP/ROW/POSNV/text() }</column>\n<column name='cAUPOS'>{ $rs/VBRP/ROW/AUPOS/text() }</column> \n<column name='cVGPOS'>{ $rs/VBRP/ROW/VGPOS/text() }</column>\n\n<column name='cPOSNR'>{ $POSNR }</column>\n<column name='cERNAM'>{ $rs/VBRP/ROW/ERNAM/text() }</column>\n<column name='cPSTYV'>{ $rs/VBRP/ROW/PSTYV/text() }</column>\n<column name='cERDAT'>{ $ERDAT }</column>\n<column name='cERZET'>{ $ERZET }</column>\n<column name='cMATNR'>{ $rs/VBRP/ROW/MATNR/text() } { ' ' } { $rs/VBRP/ROW/ARKTX/text() }</column>\n<column name='cMATNR_name'>{ $rs/VBRP/ROW/ARKTX/text() }</column>\n<column name='cCHARG'>{ $rs/VBRP/ROW/CHARG/text() }</column>\n\n<column name='cFKIMG2'>{ $rs/VBRP/ROW/FKIMG/text() } { ' ' } { $VRKME }</column>\n<column name='cNTGEW'>{ $NTGEW } { ' ' } { $rs/VBRP/ROW/GEWEI/text() }</column>\n<column name='cFKLMG'>{ $FKLMG }</column>\n<column name='cBRGEW'>{ $NTGEW }</column>\n<column name='cUMVKN'>{ $rs/VBRP/ROW/UMVKN/text() } { ' ' } { $VRKME } { '<->' } { $rs/VBRP/ROW/UMVKZ/text() } { ' ' } { $MEINS }</column>\n<column name='cVOLUM'>{ $rs/VBRP/ROW/VOLUM/text() }</column>\n<column name='cWERKS'>{ $rs/VBRP/ROW/WERKS/text() }</column>\n<column name='cSPART'>{ $rs/VBRP/ROW/SPART/text() } { ' ' } { $SPART2 }</column> \n<column name='cAUBEL'>{ $AUBEL } { ' ' } { $AUPOS } { ' ' } { $rs/VBRP/ROW/AUTYP/text() }</column>\n<column name='cLGORT'>{ $rs/VBRP/ROW/LGORT/text() }</column>\n<column name='cVGBEL'>{ $VGBEL } { ' ' } { $VGPOS } { ' ' }{ $rs/VBRP/ROW/VGTYP/text() }</column>\n<column name='cUVALL'>{ $rs/VBRP/ROW/UVALL/text() }</column>\n\n<column name='cPRSDT'>{ $PRSDT }</column>\n<column name='cABRGB'>{ $ABRBG }</column>\n<column name='cPMATN'>{ $rs/VBRP/ROW/PMATN/text() }</column>\n<column name='cFBUDA'>{ $FBUDA }</column>\n<column name='cMPROK'>{ $MPROK }</column>\n<column name='cKURSK'>{ $rs/VBRP/ROW/KURSK/text() }</column>\n<column name='cPRSFD'>{ $PRSFD }</column>\n<column name='cKOWRR'>{ $KOWRR }</column>\n<column name='cSHKZG'>{ $SHKZG }</column>\n<column name='cKONDM'>{ $KONDM }</column>\n<column name='cSKTOF'>{ $rs/VBRP/ROW/SKTOF/text() }</column>\n<column name='cBONUS'>{ $BONUS }</column>\n<column name='cUVPRS'>{ $rs/VBRP/ROW/UVPRS/text() }</column>\n<column name='cPROVG'>{ $PROVG }</column>\n<column name='cPREFF'>{ $rs/VBRP/ROW/PREFF/text() }</column>\n<column name='cMATKL'>{ $rs/VBRP/ROW/MATKL/text() }</column>\n<column name='cPRODH'>{ $rs/VBRP/ROW/PRODH/text() }</column>\n\n<column name='cALAND'>{ $rs/VBRP/ROW/ALAND/text() }</column>\n<column name='cGSBER'>{ $rs/VBRP/ROW/GSBER/text() }</column>\n<column name='cTAXM1'>{ $rs/VBRP/ROW/TAXM1/text() }</column>\n<column name='cSKFBP'>{ $SKFBP } { ' ' } { $rs/VBRK/ROW/WAERK/text() }</column>\n<column name='cKTGRM'>{ $KTGRM }</column>\n<column name='cWKCOU'>{ $rs/VBRP/ROW/WKCOU/text() }</column>\n<column name='cWKCTY'>{ $rs/VBRP/ROW/WKCTY/text() }</column>\n<column name='cWKREG'>{ $rs/VBRP/ROW/WKREG/text() }</column>\n\n<column name='cLLAND_AUFT'>{ $rs/VBRP/ROW/LLAND_AUFT/text() }</column>\n<column name='cKDGRP_AUFT'>{ $KDGRP_AUFT }</column>\n<column name='cREGIO_AUFT'>{ $rs/VBRP/ROW/REGIO_AUFT/text() }</column>\n<column name='cVKORG_AUFT'>{ $rs/VBRP/ROW/VKORG_AUFT/text() } { ' ' } { $VKORG_AUFT2 }</column>\n<column name='cPLTYP_AUFT'>{ $PLTYP_AUFT }</column>\n<column name='cVTWEG_AUFT'>{ $rs/VBRP/ROW/VTWEG_AUFT/text() } { ' ' } { $VTWEG_AUFT2 }</column>\n<column name='cSPARA'>{ $rs/VBRP/ROW/SPARA/text() } { ' ' } { $SPARA2 }</column>\n<column name='cEAN11'>{ $rs/VBRP/ROW/EAN11/text() }</column>\n<column name='cMATWA'>{ $rs/VBRP/ROW/MATWA/text() }</column>\n<column name='cBZIRK_AUFT'>{ $rs/VBRP/ROW/BZIRK_AUFT/text() }</column>\n<column name='cAUGRU_AUFT'>{ $AUGRU_AUFT }</column>\n<column name='cVKGRP'>{ $rs/VBRP/ROW/VKGRP/text() }</column>\n<column name='cVKAUS'>{ VKAUS }</column>\n<column name='cVKBUR'>{ $rs/VBRP/ROW/VKBUR/text() }</column>\n<column name='cWKCTY'>{ $rs/VBRP/ROW/WKCTY/text() }</column>\n<column name='cMSR_RET_REASON'>{ $rs/VBRP/ROW/MSR_RET_REASON/text() }</column>\n<column name='cMSR_REFUND_CODE'>{ $rs/VBRP/ROW/MSR/text() }</column>\n<column name='cKONDA_AUFT'>{ $KONDA_AUFT }</column>\n\n<column name='cGSBER'>{ $rs/VBRP/ROW/GSBER/text() }</column>\n<column name='cKOSTL'>{ $rs/VBRP/ROW/KOSTL/text() }</column>\n<column name='cAUFNR'>{ $rs/VBRP/ROW/AUFNR/text() }</column>\n<column name='cPRCTR'>{ $rs/VBRP/ROW/PRCTR/text() }</column>\n<column name='cPS_PSP_PNR'>{ $rs/VBRP/ROW/PS_PSP_PNR/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VF-03 - Invoice Display : Overview of Billing Items(VF05)",
  "compositionName" : "VF-03 -  Overview of Billing Items(VF05)"
}