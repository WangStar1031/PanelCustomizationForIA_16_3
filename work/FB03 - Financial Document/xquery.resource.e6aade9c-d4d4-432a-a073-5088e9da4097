{
  "createdBy" : "sue@iacustomer.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "c42e1f78-6953-453c-9779-3cf4e050af3d",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sBELNR external;\ndeclare variable $sBUKRS external;\ndeclare variable $sGJAHR external;\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sBELNR, concat(\"contains($bkpf/BELNR, &apos;\", $sBELNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"$bkpf/BUKRS = &apos;\", $sBUKRS, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sGJAHR, concat(\"$bkpf/GJAHR = &apos;\", $sGJAHR, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $bkpf in /SAP/BKPF/ROW \", $whereClause, \" return <RS><BKPF>{ $bkpf }</BKPF></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $BLDAT := sias:showdate($rs/BKPF/ROW/BLDAT/text())\n    let $BUDAT := sias:showdate($rs/BKPF/ROW/BUDAT/text())\n    let $CPUDT := sias:showdate($rs/BKPF/ROW/CPUDT/text())\n    let $CPUTM := sias:showtime($rs/BKPF/ROW/CPUTM/text())\n    let $LTEXT := sias:get_t003t($rs/BKPF/ROW/BLART/text())\n    let $AEDAT := sias:showdate($rs/BKPF/ROW/AEDAT/text())\n    let $UPDDT := sias:showdate($rs/BKPF/ROW/UPDDT/text())\n    let $CN := sias:get_t001($rs/BKPF/ROW/BUKRS/text(), 'BUTXT')\n    \n    let $CLASSNAME := 'BKPF'\n    let $OBJKEY    := concat($rs/BKPF/ROW/BUKRS/text(),$rs/BKPF/ROW/BELNR/text(),$rs/BKPF/ROW/GJAHR/text())\n    let $GOSCT     := count(sias:get_gosdoc($CLASSNAME,$OBJKEY))\n    return\n\n<row id='{string($rs/BKPF/ROW/@table:id)}'>\n<column name='cBELNR'>{ $rs/BKPF/ROW/BELNR/text() }</column>\n<column name='cBUKRS'>{ $rs/BKPF/ROW/BUKRS/text() }</column>\n<column name='cGJAHR'>{ $rs/BKPF/ROW/GJAHR/text() }</column>\n<column name='cBLDAT'>{ $BLDAT }</column>\n<column name='cBUDAT'>{ $BUDAT }</column>\n<column name='cMONAT'>{ $rs/BKPF/ROW/MONAT/text() }</column>\n<column name='cXBLNR'>{ $rs/BKPF/ROW/XBLNR/text() }</column>\n<column name='cBVORG'>{ $rs/BKPF/ROW/BVORG/text() }</column>\n<column name='cWAERS'>{ $rs/BKPF/ROW/WAERS/text() }</column>\n<column name='cLDGRP'>{ $rs/BKPF/ROW/LDGRP/text() }</column>\n\n<column name='cBLART'>{ $rs/BKPF/ROW/BLART/text() }</column>\n<column name='cBLART2'>{ $LTEXT } ({ $rs/BKPF/ROW/BLART/text() })</column>\n<column name='cBKTXT'>{ $rs/BKPF/ROW/BKTXT/text() }</column>\n<column name='cCCINS'>{ $rs/BKPF/ROW/CCINS/text() }</column>\n<column name='cCCNUM'>{ $rs/BKPF/ROW/CCNUM/text() }</column>\n<column name='cLOTKZ'>{ $rs/BKPF/ROW/LOTKZ/text() }</column>\n<column name='cXBLNR'>{ $rs/BKPF/ROW/XBLNR/text() }</column>\n<column name='cBLDAT'>{ $rs/BKPF/ROW/BLDAT/text() }</column>\n\n<column name='cWAERS'>{ $rs/BKPF/ROW/WAERS/text() }</column>\n<column name='cPERIOD'>{ $rs/BKPF/ROW/MONAT/text() } / { $rs/BKPF/ROW/GJAHR/text() }</column>\n<column name='cAWTYP'>{ $rs/BKPF/ROW/AWTYP/text() }</column>\n<column name='cAWKEY'>{ $rs/BKPF/ROW/AWKEY/text() }</column>\n\n<column name='cAWSYS'>{ $rs/BKPF/ROW/AWSYS/text() }</column>\n<column name='cAWSYS2'>{ $rs/BKPF/ROW/AWSYS2/text() }</column>\n<column name='cUSNAM'>{ $rs/BKPF/ROW/USNAM/text() }</column>\n<column name='cPPNAM'>{ $rs/BKPF/ROW/PPNAM/text() }</column>\n<column name='cCPUDT'>{ $CPUDT }</column>\n<column name='cCPUTM'>{ $CPUTM }</column>\n<column name='cTCODE'>{ $rs/BKPF/ROW/TCODE/text() }</column>\n<column name='cAEDAT'>{ $AEDAT }</column>\n<column name='cUPDDT'>{ $UPDDT }</column>\n\n<column name='cXREF1_HD'>{ $rs/BKPF/ROW/XREF1_HD/text() }</column>\n<column name='cXREF2_HD'>{ $rs/BKPF/ROW/XREF2_HD/text() }</column>\n<column name='cCN'>{ $CN }</column>\n\n<column name='cCLASSNAME'>{ $CLASSNAME }</column>\n<column name='cOBJKEY'>{ $OBJKEY }</column>\n<column name='cGOSCOUNT'>{ $GOSCT }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "FB03 - Financial Document",
  "compositionName" : "FB03"
}