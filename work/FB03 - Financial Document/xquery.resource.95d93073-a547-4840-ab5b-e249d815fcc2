{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "00fd1609-b9dd-42e3-9a7f-458c51f40d36",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\ndeclare variable $sCLASSNAME external;\ndeclare variable $sOBJKEY external;\n\ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sCLASSNAME, concat(\"$docs/CLASSNAME = &apos;\", $sCLASSNAME, \"&apos;\" ))\nlet $whereClause := local:addClause($whereClause, $sOBJKEY, concat(\"$docs/OBJKEY = &apos;\", $sOBJKEY, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $docs in /SAP/GOSDOC/ROW \", $whereClause, \" return <RS><GOSDOC>{ $docs }</GOSDOC></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    \n    let $CLASSNAME        := $rs/GOSDOC/ROW/CLASSNAME/text()\n    let $OBJKEY           := $rs/GOSDOC/ROW/OBJKEY/text()\n    let $CREAUSER         := $rs/GOSDOC/ROW/CREA_USER/text()\n    let $CREATIME         := sias:showdate(substring($rs/GOSDOC/ROW/CREA_TIME/text(),1,8))\n    let $CONTREP          := $rs/GOSDOC/ROW/CONTREP/text()\n    let $DOCID            := $rs/GOSDOC/ROW/DOCID/text()\n    let $COMPID           := $rs/GOSDOC/ROW/COMPID/text()\n    \n    let $crep             := sias:get_crep($CONTREP)\n    let $HTTP_SERV        := substring-before($crep,'//')\n    let $HTTP_SERV_ALL    := substring-after($crep,'//')\n    let $HTTP_PORT        := substring-before($HTTP_SERV_ALL,'//')\n    let $HTTP_PORT_ALL    := substring-after($HTTP_SERV_ALL,'//')\n    let $HTTP_SCRPT       := substring-before($HTTP_PORT_ALL,'//')\n    let $HTTP_SCRPT_ALL   := substring-after($HTTP_PORT_ALL,'//')\n    let $HTTP_VERSION     := substring-before($HTTP_SCRPT_ALL,'//')\n    let $HTTP_VERSION_ALL := substring-after($HTTP_SCRPT_ALL,'//')\n  \n    let $ADKHOST      := concat($HTTP_SERV,':',$HTTP_PORT)\n    let $ADKPATH      := concat($HTTP_SCRPT,'?get&amp;pVersion=',$HTTP_VERSION,'&amp;contRep=',$CONTREP,'&amp;docId=',$DOCID,'&amp;compId=',$COMPID)\n    \nreturn\n\n<row id='{string($rs/GOSDOC/ROW/@table:id)}'>\n<column name='cCLASSNAME'>{ $CLASSNAME }</column>\n<column name='cOBJKEY'>{ $OBJKEY }</column>\n<column name='cCREAUSER'>{ $CREAUSER }</column>\n<column name='cCREATIME'>{ $CREATIME }</column>\n<column name='cCONTREP'>{ $CONTREP }</column>\n<column name='cDOCID'>{ $DOCID }</column>\n<column name='cCOMPID'>{ $COMPID }</column>\n\n<column name='cADKHOST'>{ $ADKHOST }</column>\n<column name='cADKPATH'>{ $ADKPATH }</column>\n</row>\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "FB03 - FInancial Document - GOS",
  "compositionName" : "Set 1"
}