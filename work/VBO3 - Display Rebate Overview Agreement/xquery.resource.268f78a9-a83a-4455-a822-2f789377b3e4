{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "b06540ff-aab2-44e0-a04a-86220bc5888a",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKNUMA external;\n\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\ndeclare function local:getKNA1($bonem)\n{\n for $kna1 in /SAP/KNA1/ROW[KUNNR = $bonem]\n return <RS><KNA1>{$kna1}</KNA1></RS>\n};\ndeclare function local:checkRateUnit($KRECH)\n{\n if ($KRECH = 'B')\nthen \nlet $RateUnit := '%'\nreturn $RateUnit\nelse\nlet $RateUnit := ' '\nreturn $RateUnit\n};\ndeclare function local:getBOSTA($bosta)\n{\n\tswitch ($bosta)\n    case \" \" return \" Open\"\n    case \"A\" return \" Settlement is being checked for release\"\n    case \"B\" return \" Agreement released for settlement\"\n    case \"C\" return \" Settlement has been created\"\n    case \"D\" return \" Final settlement of agreement already carried out\" \n    \n    default return \"N/A\"\n};\ndeclare function local:getABSPZ($abspz)\n{\n\tswitch ($abspz)\n    case \" \" return \" Display all documents\"\n    case \"A\" return \" Display totals at vendor/material/period level\"\n    case \"B\" return \" Display totals at vendor/material level\"\n    case \"D\" return \" Display totals at vendor level\"\n    case \"E\" return \" Display totals at condition granter/material/period level\" \n    case \"F\" return \" Display totals at condition granter/material level\"\n    case \"G\" return \" Display totals at condition granter level\"\n    \n     \n    default return \"N/A\"\n};\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sKNUMA, concat(\"contains($kona/KNUMA, &apos;\", $sKNUMA, \"&apos;)\" ))\n\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $kona in /SAP/KONA/ROW[ABTYP = 'A' and KAPPL = 'V'] \", $whereClause, \" return <RS><KONA>{ $kona }</KONA></RS>\")\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $BOSTA_TEXT := local:getBOSTA($rs/KONA/ROW/BOSTA/text())\n    let $ABSPZ_TEXT := local:getABSPZ($rs/KONA/ROW/ABSPZ/text())\n    \n    let $KNA1 := local:getKNA1($rs/KONA/ROW/BONEM/text())\n    let $VTEXT := sias:get_t6b1t($rs/KONA/ROW/BOART/text())\n    let $TEXT1 := sias:get_t042z($KNA1/KNA1/ROW/LAND1/text(), $rs/KONA/ROW/ZLSCH/text())\n    let $LTEXT := sias:get_tfact($rs/KONA/ROW/IDENT3/text())\n    let $DATAB := sias:showdate($rs/KONA/ROW/DATAB/text())\n    let $DATBI := sias:showdate($rs/KONA/ROW/DATBI/text())\n    let $BONEM := sias:trimzero($rs/KONA/ROW/BONEM/text())\n   (: let $VTEXT0 := sias:get_tvkot($rs/KONA/ROW/VKORG/text())\n    let $VTEXT1 := sias:get_tvtwt($rs/KONA/ROW/VTWEG/text())\n    let $VTEXT2 := sias:get_tspat($rs/KONA/ROW/SPART/text()):)\n    (:let $RateUnit := local:checkRateUnit($rs/KONP/ROW/KRECH/text() ):)\n    return\n\n<row id='{string($rs/BKPF/ROW/@table:id)}'>\n<column name='cKNUMA'>{ $rs/KONA/ROW/KNUMA/text() }</column>\n<column name='cBOART'>{ $rs/KONA/ROW/BOART/text() }{' '}{ $VTEXT }</column> \n<column name='cBOTEXT'>{ $rs/KONA/ROW/BOTEXT/text() }</column>\n<column name='cBONEM'>{ $BONEM }{' '}{ $KNA1/KNA1/ROW/NAME1/text() }</column>\n<column name='cWAERS'>{ $rs/KONA/ROW/WAERS/text() }</column>\n<column name='cZLSCH'>{ $rs/KONA/ROW/ZLSCH/text() }{' '}{ $TEXT1 }</column>\n<column name='cABREX'>{ $rs/KONA/ROW/ABREX/text() }</column>\n<column name='cIDENT3'>{ $rs/KONA/ROW/IDENT3/text() }{' '}{ $LTEXT }</column>\n<column name='cDATAB'>{ $DATAB }</column>\n<column name='cDATBI'>{ $DATBI }</column>\n<column name='cBOSTA'>{ $rs/KONA/ROW/BOSTA/text() }{' '}{ $BOSTA_TEXT }</column>\n<column name='cABSPZ'>{ $rs/KONA/ROW/ABSPZ/text() }{' '} {$ABSPZ_TEXT }</column>\n\n\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VBO3 - Display Rebate Overview Agreement",
  "compositionName" : "Set 1"
}