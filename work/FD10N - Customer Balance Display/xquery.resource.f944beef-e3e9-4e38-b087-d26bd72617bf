{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "866f5b99-7037-448b-a39f-cc934efdace8",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\n \ndeclare variable $page external;\ndeclare variable $size external;\n \n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sKUNNR external;\ndeclare variable $sBUKRS external;\ndeclare variable $sGJAHR external;\n \ndeclare function local:getResultsPage($rows, $page, $size) {\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\nlet $tab :=\nfor $kna1 in /SAP/KNA1/ROW,\n    $knc1 in /SAP/KNC1/ROW[KUNNR=$kna1/KUNNR and BUKRS=$sBUKRS and GJAHR=$sGJAHR]\nwhere contains($kna1/KUNNR,$sKUNNR)\n\n let $UM01S := if(fn:exists($knc1/UM01S)) then ($knc1/UM01S) else 0\n let $UM02S := if(fn:exists($knc1/UM02S)) then ($knc1/UM02S) else 0\n let $UM03S := if(fn:exists($knc1/UM03S)) then ($knc1/UM03S) else 0\n let $UM04S := if(fn:exists($knc1/UM04S)) then ($knc1/UM04S) else 0\n let $UM05S := if(fn:exists($knc1/UM05S)) then ($knc1/UM05S) else 0\n let $UM06S := if(fn:exists($knc1/UM06S)) then ($knc1/UM06S) else 0\n let $UM07S := if(fn:exists($knc1/UM07S)) then ($knc1/UM07S) else 0\n let $UM08S := if(fn:exists($knc1/UM08S)) then ($knc1/UM08S) else 0\n let $UM09S := if(fn:exists($knc1/UM09S)) then ($knc1/UM09S) else 0\n let $UM10S := if(fn:exists($knc1/UM10S)) then ($knc1/UM10S) else 0\n let $UM11S := if(fn:exists($knc1/UM11S)) then ($knc1/UM11S) else 0\n let $UM12S := if(fn:exists($knc1/UM12S)) then ($knc1/UM12S) else 0\n let $UM13S := if(fn:exists($knc1/UM13S)) then ($knc1/UM13S) else 0\n let $UM14S := if(fn:exists($knc1/UM14S)) then ($knc1/UM14S) else 0\n let $UM15S := if(fn:exists($knc1/UM15S)) then ($knc1/UM15S) else 0\n let $UM16S := if(fn:exists($knc1/UM16S)) then ($knc1/UM16S) else 0\n \n let $UM01H := if(fn:exists($knc1/UM01H)) then ($knc1/UM01H) else 0\n let $UM02H := if(fn:exists($knc1/UM02H)) then ($knc1/UM02H) else 0\n let $UM03H := if(fn:exists($knc1/UM03H)) then ($knc1/UM03H) else 0\n let $UM04H := if(fn:exists($knc1/UM04H)) then ($knc1/UM04H) else 0\n let $UM05H := if(fn:exists($knc1/UM05H)) then ($knc1/UM05H) else 0\n let $UM06H := if(fn:exists($knc1/UM06H)) then ($knc1/UM06H) else 0\n let $UM07H := if(fn:exists($knc1/UM07H)) then ($knc1/UM07H) else 0\n let $UM08H := if(fn:exists($knc1/UM08H)) then ($knc1/UM08H) else 0\n let $UM09H := if(fn:exists($knc1/UM09H)) then ($knc1/UM09H) else 0\n let $UM10H := if(fn:exists($knc1/UM10H)) then ($knc1/UM10H) else 0\n let $UM11H := if(fn:exists($knc1/UM11H)) then ($knc1/UM11H) else 0\n let $UM12H := if(fn:exists($knc1/UM12H)) then ($knc1/UM12H) else 0\n let $UM13H := if(fn:exists($knc1/UM13H)) then ($knc1/UM13H) else 0\n let $UM14H := if(fn:exists($knc1/UM14H)) then ($knc1/UM14H) else 0\n let $UM15H := if(fn:exists($knc1/UM15H)) then ($knc1/UM15H) else 0\n let $UM16H := if(fn:exists($knc1/UM16H)) then ($knc1/UM16H) else 0\n \n let $UMSAV := if(fn:exists($knc1/UMSAV)) then ($knc1/UMSAV) else 0\n \n let $UM01U := if(fn:exists($knc1/UM01U)) then ($knc1/UM01U) else 0\n let $UM02U := if(fn:exists($knc1/UM02U)) then ($knc1/UM02U) else 0\n let $UM03U := if(fn:exists($knc1/UM03U)) then ($knc1/UM03U) else 0\n let $UM04U := if(fn:exists($knc1/UM04U)) then ($knc1/UM04U) else 0\n let $UM05U := if(fn:exists($knc1/UM05U)) then ($knc1/UM05U) else 0\n let $UM06U := if(fn:exists($knc1/UM06U)) then ($knc1/UM06U) else 0\n let $UM07U := if(fn:exists($knc1/UM07U)) then ($knc1/UM07U) else 0\n let $UM08U := if(fn:exists($knc1/UM08U)) then ($knc1/UM08U) else 0\n let $UM09U := if(fn:exists($knc1/UM09U)) then ($knc1/UM09U) else 0\n let $UM10U := if(fn:exists($knc1/UM10U)) then ($knc1/UM10U) else 0\n let $UM11U := if(fn:exists($knc1/UM11U)) then ($knc1/UM11U) else 0\n let $UM12U := if(fn:exists($knc1/UM12U)) then ($knc1/UM12U) else 0\n let $UM13U := if(fn:exists($knc1/UM13U)) then ($knc1/UM13U) else 0\n let $UM14U := if(fn:exists($knc1/UM14U)) then ($knc1/UM14U) else 0\n let $UM15U := if(fn:exists($knc1/UM15U)) then ($knc1/UM15U) else 0\n let $UM16U := if(fn:exists($knc1/UM16U)) then ($knc1/UM16U) else 0\n  \n  let $bal1 := xs:decimal($UM01S) - xs:decimal($UM01H)\n  let $cum1 := xs:decimal($UMSAV) + xs:decimal($bal1)\n\n  let $bal2 := xs:decimal($UM02S) - xs:decimal($UM02H)\n  let $cum2 := xs:decimal($cum1) + xs:decimal($bal2)\n\n  let $bal3 := xs:decimal($UM03S) - xs:decimal($UM03H)\n  let $cum3 := xs:decimal($cum2) + xs:decimal($bal3)\n\n  let $bal4 := xs:decimal($UM04S) - xs:decimal($UM04H)\n  let $cum4 := xs:decimal($cum3) + xs:decimal($bal4)\n\n  let $bal5 := xs:decimal($UM05S) - xs:decimal($UM05H)\n  let $cum5 := xs:decimal($cum4) + xs:decimal($bal5)\n  \n  let $bal6 := xs:decimal($UM06S) - xs:decimal($UM06H)\n  let $cum6 := xs:decimal($cum5) + xs:decimal($bal6)\n\n  let $bal7 := xs:decimal($UM07S) - xs:decimal($UM07H)\n  let $cum7 := xs:decimal($cum6) + xs:decimal($bal7)\n\n  let $bal8 := xs:decimal($UM08S) - xs:decimal($UM08H)\n  let $cum8 := xs:decimal($cum7) + xs:decimal($bal8)\n\n  let $bal9 := xs:decimal($UM09S) - xs:decimal($UM09H)\n  let $cum9 := xs:decimal($cum8) + xs:decimal($bal9)\n\n  let $bal10 := xs:decimal($UM10S) - xs:decimal($UM10H)\n  let $cum10 := xs:decimal($cum9) + xs:decimal($bal10)\n  \n  let $bal11 := xs:decimal($UM11S) - xs:decimal($UM11H)\n  let $cum11 := xs:decimal($cum10) + xs:decimal($bal11)\n  \n  let $bal12 := xs:decimal($UM12S) - xs:decimal($UM12H)\n  let $cum12 := xs:decimal($cum11) + xs:decimal($bal12)\n\n  let $bal13 := xs:decimal($UM13S) - xs:decimal($UM13H)\n  let $cum13 := xs:decimal($cum12) + xs:decimal($bal13)\n  \n  let $bal14 := xs:decimal($UM14S) - xs:decimal($UM14H)\n  let $cum14 := xs:decimal($cum13) + xs:decimal($bal14)\n\n  let $bal15 := xs:decimal($UM15S) - xs:decimal($UM15H)\n  let $cum15 := xs:decimal($cum14) + xs:decimal($bal15)\n\n  let $bal16 := xs:decimal($UM16S) - xs:decimal($UM16H)\n  let $cum16 := xs:decimal($cum15) + xs:decimal($bal16)\n  \n  let $tdeb := $UM01S + $UM02S + $UM03S + $UM04S + $UM05S + $UM06S + $UM07S + $UM08S + $UM09S + $UM10S + $UM11S + $UM12S + $UM13S + $UM14S + $UM15S + $UM16S\n  let $tcre := $UM01H + $UM02H + $UM03H + $UM04H + $UM05H + $UM06H + $UM07H + $UM08H + $UM09H + $UM10H + $UM11H + $UM12H + $UM13H + $UM14H + $UM15H + $UM16H\n  let $tbal := $bal1 + $bal2 + $bal3 + $bal4 + $bal5 + $bal6 + $bal7 + $bal8 + $bal9 + $bal10 + $bal11 + $bal12 + $bal13 + $bal14 + $bal15 + $bal16\n  let $tsap := $UM01U + $UM02U + $UM03U + $UM04U + $UM05U  +$UM06U + $UM07U + $UM08U + $UM09U + $UM10U + $UM11U + $UM12U + $UM13U + $UM14U + $UM15U + $UM16U \n  \nreturn \n<TAB>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>Balance Carryforward</PERIOD><DEBIT></DEBIT><CREDIT></CREDIT><BALANCE></BALANCE><CUMUL>{ xs:decimal($UMSAV) }</CUMUL><SALPUR></SALPUR></ROW>\n\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>1</PERIOD><DEBIT>{ xs:decimal($UM01S) }</DEBIT><CREDIT>{ xs:decimal($UM01H) }</CREDIT><BALANCE>{ xs:decimal($bal1) }</BALANCE><CUMUL>{ xs:decimal($cum1) }</CUMUL><SALPUR>{ xs:decimal($UM01U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>2</PERIOD><DEBIT>{ xs:decimal($UM02S) }</DEBIT><CREDIT>{ xs:decimal($UM02H) }</CREDIT><BALANCE>{ xs:decimal($bal2) }</BALANCE><CUMUL>{ xs:decimal($cum2) }</CUMUL><SALPUR>{ xs:decimal($UM02U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>3</PERIOD><DEBIT>{ xs:decimal($UM03S) }</DEBIT><CREDIT>{ xs:decimal($UM03H) }</CREDIT><BALANCE>{ xs:decimal($bal3) }</BALANCE><CUMUL>{ xs:decimal($cum3) }</CUMUL><SALPUR>{ xs:decimal($UM03U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>4</PERIOD><DEBIT>{ xs:decimal($UM04S) }</DEBIT><CREDIT>{ xs:decimal($UM04H) }</CREDIT><BALANCE>{ xs:decimal($bal4) }</BALANCE><CUMUL>{ xs:decimal($cum4) }</CUMUL><SALPUR>{ xs:decimal($UM04U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>5</PERIOD><DEBIT>{ xs:decimal($UM05S) }</DEBIT><CREDIT>{ xs:decimal($UM05H) }</CREDIT><BALANCE>{ xs:decimal($bal5) }</BALANCE><CUMUL>{ xs:decimal($cum5) }</CUMUL><SALPUR>{ xs:decimal($UM05U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>6</PERIOD><DEBIT>{ xs:decimal($UM06S) }</DEBIT><CREDIT>{ xs:decimal($UM06H) }</CREDIT><BALANCE>{ xs:decimal($bal6) }</BALANCE><CUMUL>{ xs:decimal($cum6) }</CUMUL><SALPUR>{ xs:decimal($UM06U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>7</PERIOD><DEBIT>{ xs:decimal($UM07S) }</DEBIT><CREDIT>{ xs:decimal($UM07H) }</CREDIT><BALANCE>{ xs:decimal($bal7) }</BALANCE><CUMUL>{ xs:decimal($cum7) }</CUMUL><SALPUR>{ xs:decimal($UM07U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>8</PERIOD><DEBIT>{ xs:decimal($UM08S) }</DEBIT><CREDIT>{ xs:decimal($UM08H) }</CREDIT><BALANCE>{ xs:decimal($bal8) }</BALANCE><CUMUL>{ xs:decimal($cum8) }</CUMUL><SALPUR>{ xs:decimal($UM08U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>9</PERIOD><DEBIT>{ xs:decimal($UM09S) }</DEBIT><CREDIT>{ xs:decimal($UM09H) }</CREDIT><BALANCE>{ xs:decimal($bal9) }</BALANCE><CUMUL>{ xs:decimal($cum9) }</CUMUL><SALPUR>{ xs:decimal($UM09U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>10</PERIOD><DEBIT>{ xs:decimal($UM10S) }</DEBIT><CREDIT>{ xs:decimal($UM10H) }</CREDIT><BALANCE>{ xs:decimal($bal10) }</BALANCE><CUMUL>{ xs:decimal($cum10) }</CUMUL><SALPUR>{ xs:decimal($UM10U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>11</PERIOD><DEBIT>{ xs:decimal($UM11S) }</DEBIT><CREDIT>{ xs:decimal($UM11H) }</CREDIT><BALANCE>{ xs:decimal($bal11) }</BALANCE><CUMUL>{ xs:decimal($cum11) }</CUMUL><SALPUR>{ xs:decimal($UM11U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>12</PERIOD><DEBIT>{ xs:decimal($UM12S) }</DEBIT><CREDIT>{ xs:decimal($UM12H) }</CREDIT><BALANCE>{ xs:decimal($bal12) }</BALANCE><CUMUL>{ xs:decimal($cum12) }</CUMUL><SALPUR>{ xs:decimal($UM12U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>13</PERIOD><DEBIT>{ xs:decimal($UM13S) }</DEBIT><CREDIT>{ xs:decimal($UM13H) }</CREDIT><BALANCE>{ xs:decimal($bal13) }</BALANCE><CUMUL>{ xs:decimal($cum13) }</CUMUL><SALPUR>{ xs:decimal($UM13U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>14</PERIOD><DEBIT>{ xs:decimal($UM14S) }</DEBIT><CREDIT>{ xs:decimal($UM14H) }</CREDIT><BALANCE>{ xs:decimal($bal14) }</BALANCE><CUMUL>{ xs:decimal($cum14) }</CUMUL><SALPUR>{ xs:decimal($UM14U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>15</PERIOD><DEBIT>{ xs:decimal($UM15S) }</DEBIT><CREDIT>{ xs:decimal($UM15H) }</CREDIT><BALANCE>{ xs:decimal($bal15) }</BALANCE><CUMUL>{ xs:decimal($cum15) }</CUMUL><SALPUR>{ xs:decimal($UM15U) }</SALPUR></ROW>\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>16</PERIOD><DEBIT>{ xs:decimal($UM16S) }</DEBIT><CREDIT>{ xs:decimal($UM16H) }</CREDIT><BALANCE>{ xs:decimal($bal16) }</BALANCE><CUMUL>{ xs:decimal($cum16) }</CUMUL><SALPUR>{ xs:decimal($UM16U) }</SALPUR></ROW>\n\n<ROW><KNA1>{ $kna1 }</KNA1><PERIOD>Total</PERIOD><DEBIT>{ xs:decimal($tdeb) }</DEBIT><CREDIT>{ xs:decimal($tcre) }</CREDIT><BALANCE>{ xs:decimal($tbal) }</BALANCE><CUMUL></CUMUL><SALPUR>{ xs:decimal($tsap) }</SALPUR></ROW>\n</TAB>\n\nlet $rows := \nfor $rs in $tab/ROW\n  let $COMPANY := sias:get_t001($sBUKRS, 'BUTXT')\n  let $WAERS := sias:get_t001($sBUKRS, 'WAERS')\n  let $KUNNR := sias:trimzero($rs/KNA1/ROW/KUNNR/text())\n  let $DEBIT := sias:currency($rs/DEBIT/text(), \"\")\n  let $CREDIT := sias:currency($rs/CREDIT/text(), \"\")\n  let $BALANCE := sias:currency($rs/BALANCE/text(), \"\")\n  let $CUMUL := sias:currency($rs/CUMUL/text(), \"\")\n  let $SALPUR := sias:currency($rs/SALPUR/text(), \"\")\n  \nreturn\n   <row id=\"{string($rs/@table:id)}\">\n      <column name='cCustomer'>{ $KUNNR }{'     '}{ $rs/KNA1/ROW/NAME1/text() }</column>\n      <column name='cCompany'>{ $rs/KNC1/ROW/BUKRS/text() }{ $COMPANY }</column>\n      <column name='cWAERS'>{ $WAERS }</column>\n      \n      <column name='cPERIOD'>{ $rs/PERIOD/text() }</column>\n      <column name='cDEBIT'>{ $DEBIT }</column>\n      <column name='cCREDIT'>{ $CREDIT }</column>\n      <column name='cBALANCE'>{ $BALANCE }</column>\n      <column name='cCUMUL'>{ $CUMUL }</column>\n      <column name='cSALPUR'>{ $SALPUR }</column>\n</row>\n \nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "FD10N - Customer Balance Display",
  "compositionName" : "FD10N"
}