{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "9a3cd45e-6f8f-4976-b08c-177f772cc9c7",
  "query" : "import module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\n\ndeclare variable $page external;\ndeclare variable $size external;\n\n\ndeclare variable $sVBELN external;\ndeclare variable $sBUKRS external;\n\ndeclare function local:getResultsPage($rows, $page, $size) \n{\n  let $offset := $page * $size\n  let $total := count($rows)\n  return <results total=\"{ $total }\"> {\n    for $row in subsequence($rows, $offset + 1, $size)\n      return $row\n  } </results>\n};\n\ndeclare function local:get_ktgrd($KTGRD)\n{\nswitch ($KTGRD)\n    case \"01\" return \"Domestic revenues\"\n    case \"02\" return \"Foreign revenues\"\n    default return \"Affiliat.com.reven.\"\n};\n\ndeclare function local:get_mansp($MANSP)\n{\nswitch ($MANSP)\n    case \"A\" return \"Manual block due to a telephone payment advice\"\n    case \"B\" return \"Manual block due to complaints against vendor\"\n    case \"D\" return \"Disputed Item\"\n    case \"H\" return \"Block reason H\"\n    case \"R\" return \"Blocked by invoice verification\"\n    default return \"Freed for dunning\"\n};\n\ndeclare function local:get_mschl($MSCHL)\n{\nswitch ($MSCHL)\n    case \"1\" return \"Triggers maximum dunning level 1\"\n    case \"2\" return \"triggers maximum dunning level 2\"\n    case \"3\" return \"Triggers maximum dunning level 3\"\n    default return \"Payment has been made, separate item display\"\n};\n\ndeclare function local:get_rfbsk($RFBSK)\n{\nswitch ($RFBSK)\n    case \"A\" return \"Billing document blocked for forwarding to FI\"\n    case \"B\" return \"Posting document not created (account determ.error)\"\n    case \"C\" return \"Posting document has been created\"\n    case \"D\" return \"Billing document is not relevant for accounting\"\n    case \"E\" return \"Billing Document Canceled\"\n    case \"F\" return \"Posting Document not created (Pricing error)\"\n    case \"G\" return \"Posting document not created (export data missing)\"\n    case \"H\" return \"Posted via invoice list\"\n    case \"I\" return \"Posted via invoice list (account determination error\"\n    case \"K\" return \"Accountin document not created (no authorization)\"\n    case \"M\" return \"Analyst approval refused (only IS-OIL)\"\n    case \"N\" return \"No posting document due to fund management (only IS-PS)\" \n    default return \"Error in Accounting Interface\"\n};\n\ndeclare function local:get_pltyp($PLTYP)\n{\nswitch ($PLTYP)\n    case \"01\" return \"Wholesale\"\n    case \"02\" return \"Retail\"\n    case \"03\" return \"Industry\"\n    case \"04\" return \"Public Sector\"\n    case \"90\" return \"Internet\"\n    case \"L1\" return \"LGL:Standard Rates\"\n    default return \"LGL:Discounted Rates\"\n};\n\ndeclare function local:get_konda($KONDA)\n{\nswitch ($KONDA)\n    case \"01\" return \"Bulk buyer\"\n    case \"02\" return \"Occasional buyer\"\n    default return \"New customers\"\n};\n   \ndeclare function local:get_stceg_h($STCEG_H2)\n{\n    switch ($STCEG_H2)\n    case \"A\" return \"Ship-to Party\"\n    case \"B\" return \"Payer\"\n    case \"C\" return \"Sold-to party\"\n    case \"D\" return \"Payer (KNAS segment)\"\n    case \"E\" return \"Manually entered or changed\"\n    case \"F\" return \"Entered manually in order\"\n    case \"G\" return \"Own VAT reg. no. in dest. country\"\n    case \"H\" return \"Payer for tax receiving country from order\"\n    case \"I\" return \"Sold-to party for tax receiving country from order\"\n    default return \"Sold to party (segment KNAS)\"\n };\n \n \n declare function local:toa01($value1,$value2,$value3)\n{\nfor $toa01 in /SAP/TOA01/ROW\n    where $toa01/SAP_OBJECT/text() = $value1 and $toa01/AR_OBJECT/text() = $value2 and contains($toa01/OBJECT_ID/text(),$value3)\n\nreturn\nconcat($toa01/ARCHIV_ID/text(),'//',$toa01/ARC_DOC_ID/text())\n};\n\ndeclare function local:crep($crep_id,$arc_doc_id)\n{\n\nfor $crep in /SAP/CREP_HTTP/ROW\n\twhere $crep/CREP_ID/text() = $crep_id\n    \n    let $all := concat($crep/HTTP_SERV/text(),'//',$crep/HTTP_PORT/text(),'//',$crep/HTTP_SCRPT/text(),'//',$crep/VERSION/text(),'//',$crep/CREP_ID/text(),'//',$arc_doc_id)\n\nreturn $all\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\nif (empty($var) or $var = \"\")\nthen $whereClause\nelse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\n\nlet $whereClause := local:addClause(\"\", $sVBELN, concat(\"contains($vbrk/VBELN, &apos;\", $sVBELN, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sBUKRS, concat(\"contains($vbrk/BUKRS, &apos;\", $sBUKRS, \"&apos;)\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\n(: Search the data within the Table with a join on Info Record [INFNR] :)\n(: Select * from BKPF where BELNR = \"\" and BUKRS = \"\" and GJAHR = \"\" :)\n\nlet $query-str := concat(\"for $vbrk in /SAP/VBRK/ROW \", $whereClause, \" return <RS><VBRK>{ $vbrk }</VBRK></RS>\")\n\nlet $main-query := xhive:evaluate($query-str)\n\nlet $rows :=   \n               for $rs in $main-query\n               let $FKDAT := sias:showdate($rs/VBRK/ROW/FKDAT/text()) \n               let $ERDAT := sias:showdate($rs/VBRK/ROW/ERDAT/text())\n               let $FKDAT_RL := sias:showdate($rs/VBRK/ROW/FKDAT_RL/text())\n               let $ERZET := sias:showtime($rs/VBRK/ROW/ERZET/text())\n               let $FKART := sias:get_tvfkt($rs/VBRK/ROW/FKART/text()) \n\t\t\t   let $VKORG2 := sias:get_tvkot($rs/VBRK/ROW/VKORG/text())\n               let $VTWEG2 := sias:get_tvtwt($rs/VBRK/ROW/VTWEG/text())\n\t\t\t   let $SPART2 := sias:get_tspat($rs/VBRK/ROW/SPART/text())\n               let $ZTERM2 := sias:get_tvzbt($rs/VBRK/ROW/ZTERM/text())\n               let $BZIRK2 := sias:get_t171t($rs/VBRK/ROW/BZIRK/text()) \n               let $MANSP :=local:get_mansp($rs/VBRK/ROW/MANSP/text())\n               let $KTGRD :=local:get_ktgrd($rs/VBRK/ROW/KTGRD/text())\n               let $KALSM2 := sias:get_t683u('A', 'V', $rs/VBRK/ROW/KALSM/text())\n\t\t\t   let $MSCHL :=local:get_mschl($rs/VBRK/ROW/MSCHL/text())\n               let $RFBSK :=local:get_rfbsk($rs/VBRK/ROW/RFBSK/text())\n               let $PLTYP :=local:get_pltyp($rs/VBRK/ROW/PLTYP/text())\n               let $KONDA :=local:get_konda($rs/VBRK/ROW/KONDA/text())\n               let $VSBED := sias:get_tvsbt($rs/VBRK/ROW/VSBED/text())\n               let $STCEG_H2 :=local:get_stceg_h($rs/VBRK/ROW/STCEG_H/text())\n               let $SPART2  := sias:get_tspat($rs/VBRK/ROW/SPART/text())\n\t\t\t   let $VBELN := sias:trimzero($rs/VBRK/ROW/VBELN/text())\n               let $XBLNR := sias:trimzero($rs/VBRK/ROW/XBLNR/text())\n               let $VALDT := sias:showdate($rs/VBRK/ROW/VALDT/text())\n               let $NETWR := sias:currency($rs/VBRK/ROW/NETWR/text(), \"\")\n               let $toa01 := local:toa01('VBRK','SDOINVOICE',$rs/VBRK/ROW/VBELN/text())\n               let $ARCHIV_ID := substring-before($toa01,'//')\n               let $ARC_DOC_ID := substring-after($toa01,'//')\n               \n    let $all := local:crep($ARCHIV_ID,$ARC_DOC_ID)\n               \n    let $HTTP_SERV := substring-before($all,'//')\n    let $HTTP_SERV_ALL := substring-after($all,'//')\n    let $HTTP_PORT := substring-before($HTTP_SERV_ALL,'//')\n    let $HTTP_PORT_ALL := substring-after($HTTP_SERV_ALL,'//')\n    let $HTTP_SCRPT := substring-before($HTTP_PORT_ALL,'//')\n    let $HTTP_SCRPT_ALL := substring-after($HTTP_PORT_ALL,'//')\n    let $HTTP_VERSION := substring-before($HTTP_SCRPT_ALL,'//')\n    let $HTTP_VERSION_ALL := substring-after($HTTP_SCRPT_ALL,'//')\n    let $HTTP_CREP_ID := substring-before($HTTP_VERSION_ALL,'//')\n    let $HTTP_ARC_DOC_ID := substring-after($HTTP_VERSION_ALL,'//')\n    \n    let $url := concat('http://',$HTTP_SERV,':',$HTTP_PORT,'/',$HTTP_SCRPT,'?get&amp;pVersion=',$HTTP_VERSION,'&amp;contRep=',$HTTP_CREP_ID,'&amp;docId=',$HTTP_ARC_DOC_ID,'&amp;compId=data')\n    let $path := concat($HTTP_SCRPT,'?get&amp;pVersion=',$HTTP_VERSION,'&amp;contRep=',$HTTP_CREP_ID,'&amp;docId=',$HTTP_ARC_DOC_ID,'&amp;compId=data')\n    let $ref := concat('ref=',$url)\n    let $vhost := concat($HTTP_SERV,':',$HTTP_PORT)\n\nreturn\n<row id='{string($rs/BKPF/ROW/@table:id)}'>\n<column name='cTOA01'>{ $toa01 }</column>\n<column name='cCREP'>{ $all }</column>\n<column name='cURL'>{ $url }</column>\n<column name='cREF'>{ $ref }</column>\n\n<column name='cADKProt'>{ 'http:' }</column>\n<column name='cADKHost'>{ $HTTP_SERV }</column>\n<column name='cADKvHost'>{ $vhost }</column>\n<column name='cADKPort'>{ $HTTP_PORT }</column>\n<column name='cADKPath'>{ $path }</column>\n<column name='cADKCR'>{ $HTTP_CREP_ID }</column>\n<column name='cADKDocId'>{ $HTTP_ARC_DOC_ID }</column>\n\n<column name='cVBELN'>{ $rs/VBRK/ROW/VBELN/text() }</column>\n<column name='cNETWR'>{ $NETWR } { ' ' } { $rs/VBRK/ROW/WAERK/text() } </column>\n<column name='cKUNRG'>{ $rs/VBRK/ROW/KUNRG/text() } { ' ' } { $rs/KNA1/ROW/TXTPA/text() } </column>\n<column name='cFKDAT'>{ $FKDAT }</column>\n<column name='cFKART'>{ $FKART} </column>\n\n<column name='cERNAM'>{ $rs/VBRK/ROW/ERNAM/text() }</column>\n<column name='cERDAT'>{ $ERDAT }</column>\n<column name='cERZET'>{ $ERZET }</column>\n\n<column name='cFKDAT'>{ $FKDAT }</column>\n<column name='cWAERK'>{ $rs/VBRK/ROW/WAERK/text() }</column>\n<column name='cBUKRS'>{ $rs/VBRK/ROW/BUKRS/text() }</column>\n<column name='cCPKUR'>{ $rs/VBRK/ROW/CPKUR/text() }</column>\n<column name='cXBLNR'>{ $XBLNR }</column>\n<column name='cKURRF'>{ $rs/VBRK/ROW/KURRF/text() }</column>\n<column name='cZUONR'>{ $rs/VBRK/ROW/ZUONR/text() }</column>\n<column name='cZLSCH'>{ $rs/VBRK/ROW/ZLSCH/text() }</column>\n<column name='cMABER'>{ $rs/VBRK/ROW/MABER/text() }</column>\n<column name='cVBUND'>{ $rs/VBRK/ROW/VBUND/text() }</column>\n<column name='cVALDT'>{ $VALDT }</column>\n<column name='cMSCHL'>{ $MSCHL }</column>\n<column name='cVALTG'>{ $rs/VBRK/ROW/VALTG/text() }</column>\n<column name='cMANSP'>{ $MANSP }</column>\n<column name='cRFBSK'>{ $RFBSK }</column>\n<column name='cKTGRD'>{ $KTGRD }</column>\n<column name='cKALSM'>{ $rs/VBRK/ROW/KALSM/text() } { ' ' } { $KALSM2 }</column>\n\n<column name='cPLTYP'>{ $PLTYP }</column>\n<column name='cKURST'>{ $rs/VBRK/ROW/KURST/text() }</column>\n<column name='cKDGRP'>{ $rs/VBRK/ROW/KDGRP/text() }</column>\n<column name='cKNUMA'>{ $rs/VBRK/ROW/KNUMA/text() }</column>\n<column name='cKONDA'>{ $KONDA }</column>\n<column name='cZTERM'>{ $rs/VBRK/ROW/ZTERM/text() } { ' ' } { $ZTERM2 }</column>\n<column name='cINCO1'>{ $rs/VBRK/ROW/INCO1/text() } { ' ' } { $rs/VBRK/ROW/INCO2/text() }</column>\n\n<column name='cKONDA'>{ $rs/VBRK/ROW/KONDA/text() }</column>\n<column name='cLAND1'>{ $rs/VBRK/ROW/LAND1/text() }</column>\n<column name='cREGIO'>{ $rs/VBRK/ROW/REGIO/text() }</column>\n<column name='cTAXK1'>{ $rs/VBRK/ROW/TAXK1/text() } { ' ' } { $rs/VBRK/ROW/TAXK2/text() } { ' ' } { $rs/VBRK/ROW/TAXK3/text() } { ' ' } { $rs/VBRK/ROW/TAXK4/text() } { ' ' } { $rs/VBRK/ROW/TAXK5/text() } { ' ' } { $rs/VBRK/ROW/TAXK6/text() } { ' ' } { $rs/VBRK/ROW/TAXK7/text() } { ' ' } { $rs/VBRK/ROW/TAXK8/text() } { ' ' } { $rs/VBRK/ROW/TAKX9/text() }</column>\n<column name='cCOUNC'>{ $rs/VBRK/ROW/COUNC/text() }</column>\n<column name='cCITYC'>{ $rs/VBRK/ROW/CITYC/text() }</column>\n<column name='cSTCEG_L'>{ $rs/VBRK/ROW/STCEG_L/text() }</column>\n<column name='cEXPKZ'>{ $rs/VBRK/ROW/EXPKZ/text() }</column>\n<column name='cSTCEG_H'>{ $rs/VBRK/ROW/STCEG_H/text() } { ' ' } { $STCEG_H2 }</column>\n<column name='cXEGDR'>{ $rs/VBRK/ROW/XEGDR/text() }</column>\n<column name='cBUPLA'>{ $rs/VBRK/ROW/BUPLA/text() }</column>\n\n<column name='cVKORG'>{$rs/VBRK/ROW/VKORG/text()} { ' ' } { $VKORG2 }</column>\n<column name='cFKART_RL'>{$rs/VBRK/ROW/FKART_RL/text()}</column>\n<column name='cVTWEG'>{$rs/VBRK/ROW/VTWEG/text()} { ' ' } { $VTWEG2 }</column>\n<column name='cFKDAT_RL'>{ $FKDAT_RL }</column>\n<column name='cSPART'>{$rs/VBRK/ROW/SPART/text()} { ' ' } { $SPART2 }</column>\n<column name='cSFAKN'>{ $rs/VBRK/ROW/SFAKN/text() }</column>\n<column name='cBZIRK'>{ $rs/VBRK/ROW/BZIRK/text() } { ' ' } { $BZIRK2 }</column>\n<column name='cFKSTO'>{ $rs/VBRK/ROW/FKSTO/text() }</column>\n<column name='cMRNKZ'>{ $rs/VBRK/ROW/MRNKZ/text() }</column>\n\n<column name='cVSBED'>{ $VSBED }</column>\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)\n",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "VF03 - Display Billing Document - DISPLAY",
  "compositionName" : "VF03"
}