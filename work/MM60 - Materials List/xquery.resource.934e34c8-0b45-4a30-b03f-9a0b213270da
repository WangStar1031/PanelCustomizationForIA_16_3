{
  "createdBy" : "admin@sigma-sbs.com",
  "createdDate" : null,
  "lastModifiedBy" : "admin@sigma-sbs.com",
  "lastModifiedDate" : null,
  "name" : "903951a2-3661-46ec-84cf-9e2269bb51d1",
  "query" : "declare namespace ia = \"urn:x-emc:ia:schema:fn\";\ndeclare namespace table=\"urn:x-emc:ia:schema:table\";\nimport module namespace sias=\"urn:x-sig:sias:util:fn\";\n\ndeclare variable $page external := 0;\ndeclare variable $size external := 10;\n\n(: Our External Search variable matching the SAP Fieldname :)\ndeclare variable $sMATNR external;\ndeclare variable $sMATNR2 external;\ndeclare variable $sWERKS external;\ndeclare variable $sWERKS2 external;\ndeclare variable $sMTART external;\ndeclare variable $sMTART2 external;\ndeclare variable $sMATKL external;\ndeclare variable $sMATKL2 external;\ndeclare variable $sERNAM external;\ndeclare variable $sERNAM2 external;\n\n\n\ndeclare function local:getResultsPage($rows, $page, $size)\n{\n\tlet $offset := $page * $size\n  \tlet $total := count($rows)\n  \treturn <results total=\"{ $total }\"> { for $row in subsequence($rows, $offset + 1, $size) return $row }</results>\n};\n\ndeclare function local:addClause($whereClause as xs:string, $var as xs:string*, $expr as xs:string) as xs:string\n{\n\tif (empty($var) or $var = \"\")\n\tthen $whereClause\n\telse if ($whereClause = \"\") then $expr else concat($whereClause, \" and \", $expr)\n};\n\n(: Build a conditional Where clause :)\nlet $whereClause := local:addClause(\"\", $sMATNR, concat(\"contains($mara/MATNR, &apos;\", $sMATNR, \"&apos;)\" ))\nlet $whereClause := local:addClause($whereClause, $sMATNR2, concat(\"$mara/MATNR <= &apos;\", $sMATNR2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sWERKS, concat(\"$marc/WERKS >= &apos;\", $sWERKS, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sWERKS2, concat(\"$marc/WERKS <= &apos;\", $sWERKS2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sMTART, concat(\"$mara/MTART >= &apos;\", $sMTART, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sMTART2, concat(\"$mara/MTART <= &apos;\", $sMTART2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sMATKL, concat(\"$mara/MATKL >= &apos;\", $sMATKL, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sMATKL2, concat(\"$mara/MATKL <= &apos;\", $sMATKL2, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sERNAM, concat(\"$mara/ERNAM >= &apos;\", $sERNAM, \"&apos;\"))\nlet $whereClause := local:addClause($whereClause, $sERNAM2, concat(\"$mara/ERNAM <= &apos;\", $sERNAM2, \"&apos;\"))\nlet $whereClause := if ($whereClause != \"\") then concat(\"where \", $whereClause) else $whereClause\n\nlet $query-str := concat(\"for $mara in /SAP/MARA/ROW , $makt in /SAP/MAKT/ROW[MATNR = $mara/MATNR] , $marc in /SAP/MARC/ROW[MATNR = $mara/MATNR] ,$mbew in /SAP/MBEW/ROW[MATNR = $mara/MATNR] ,$t001w in /SAP/T001W/ROW[BWKEY = $mbew/BWKEY and WERKS = $marc/WERKS], $t001k in /SAP/T001K/ROW[BWKEY = $t001w/BWKEY],$t001 in /SAP/T001/ROW[BUKRS = $t001k/BUKRS]\",$whereClause, \"return <RS><MARA>{ $mara }</MARA><MAKT>{ $makt }</MAKT><MARC>{$marc}</MARC><MBEW>{$mbew}</MBEW><T001W>{$t001w}</T001W><T001K>{$t001k}</T001K><T001>{$t001}</T001></RS> \")\n\n\nlet $main-query := xhive:evaluate($query-str)\nlet $rows := \n\tfor $rs in $main-query\n    let $WAERS := sias:get_t001($rs/T001/ROW/BUKRS/text(),'WAERS')\n    let $LAEDA := sias:showdate($rs/MARA/ROW/LAEDA/text())\n  return \n\n<row id='{string($rs/MARA/ROW/@table:id)}'>\n<column name='cMATNR'>{ $rs/MBEW/ROW/MATNR/text() }</column>\n<column name='cBWKEY'>{ $rs/MBEW/ROW/BWKEY/text() }</column>\n<column name='cBWTAR'>{ $rs/MBEW/ROW/BWTAR/text() }</column>\n<column name='cMAKTX'>{ $rs/MAKT/ROW/MAKTX/text() }</column>\n<column name='cLAEDA'>{ $LAEDA }</column>\n<column name='cMTART'>{ $rs/MARA/ROW/MTART/text() }</column>\n<column name='cMAKTL'>{ $rs/MARA/ROW/MATKL/text() }</column>\n<column name='cMEINS'>{ $rs/MARA/ROW/MEINS/text() }</column>\n<column name='cEKGRP'>{ $rs/MARC/ROW/EKGRP/text() }</column>\n<column name='cMAABC'>{ $rs/MARC/ROW/MAABC/text() }</column>\n\n<column name='cDISMM'>{ $rs/MARC/ROW/DISMM/text() }</column>\n<column name='cBKLAS'>{ $rs/MBEW/ROW/BKLAS/text() }</column>\n<column name='cVPRSV'>{ $rs/MBEW/ROW/VPRSV/text() }</column>\n<column name='cVERPR'>{ $rs/MBEW/ROW/VERPR/text() }</column>\n<column name='cWAERS'>{ $WAERS }</column>\n<column name='cPEINH'>{ $rs/MBEW/ROW/PEINH/text() }</column>\n<column name='cERNAM'>{ $rs/MARA/ROW/ERNAM/text() }</column>\n\n</row>\n\nreturn local:getResultsPage($rows, $page, $size)",
  "moduleNamespaces" : [ "urn:x-sig:sias:util:fn" ],
  "searchName" : "MM60 - Materials List",
  "compositionName" : "Set 1"
}